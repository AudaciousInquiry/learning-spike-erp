// <auto-generated/>
/** GENERATED FILE **/
/** Generated by: gino.canessa at 3/23/2020 3:24:20 PM **/
/** Restricted to types: Group|Location|Device **/
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace generator_cli.fhir
{
	///<summary>Code Values for the Address.type field</summary>
	public sealed class AddressTypeCodes {
		public const string POSTAL = "postal";
		public const string PHYSICAL = "physical";
		public const string BOTH = "both";
	}
	///<summary>Code Values for the Address.use field</summary>
	public sealed class AddressUseCodes {
		public const string HOME = "home";
		public const string WORK = "work";
		public const string TEMP = "temp";
		public const string OLD = "old";
		public const string BILLING = "billing";
	}
	///<summary>Code Values for the Attachment.contentType field</summary>
	public sealed class AttachmentContentTypeCodes {
		public const string MIME = "Mime";
	}
	///<summary>Code Values for the Attachment.language field</summary>
	public sealed class AttachmentLanguageCodes {
		public const string HUMAN = "Human";
	}
	///<summary>Code Values for the Coding.code field</summary>
	public sealed class CodingCodeCodes {
		public const string SYMBOL = "Symbol";
	}
	///<summary>Code Values for the ContactPoint.system field</summary>
	public sealed class ContactPointSystemCodes {
		public const string PHONE = "phone";
		public const string FAX = "fax";
		public const string EMAIL = "email";
		public const string PAGER = "pager";
		public const string URL = "url";
		public const string SMS = "sms";
		public const string OTHER = "other";
	}
	///<summary>Code Values for the ContactPoint.use field</summary>
	public sealed class ContactPointUseCodes {
		public const string HOME = "home";
		public const string WORK = "work";
		public const string TEMP = "temp";
		public const string OLD = "old";
		public const string MOBILE = "mobile";
	}
	///<summary>Code Values for the Contributor.type field</summary>
	public sealed class ContributorTypeCodes {
		public const string AUTHOR = "author";
		public const string EDITOR = "editor";
		public const string REVIEWER = "reviewer";
		public const string ENDORSER = "endorser";
	}
	///<summary>Code Values for the DataRequirement.type field</summary>
	public sealed class DataRequirementTypeCodes {
		public const string THE = "The";
	}
	///<summary>Code Values for the DataRequirementSort.direction field</summary>
	public sealed class DataRequirementSortDirectionCodes {
		public const string ASCENDING = "ascending";
		public const string DESCENDING = "descending";
	}
	///<summary>Code Values for the Device.status field</summary>
	public sealed class DeviceStatusCodes {
		public const string ACTIVE = "active";
		public const string INACTIVE = "inactive";
		public const string ENTERED_IN_ERROR = "entered-in-error";
		public const string UNKNOWN = "unknown";
	}
	///<summary>Code Values for the DeviceDeviceName.type field</summary>
	public sealed class DeviceDeviceNameTypeCodes {
		public const string UDI_LABEL_NAME = "udi-label-name";
		public const string USER_FRIENDLY_NAME = "user-friendly-name";
		public const string PATIENT_REPORTED_NAME = "patient-reported-name";
		public const string MANUFACTURER_NAME = "manufacturer-name";
		public const string MODEL_NAME = "model-name";
		public const string OTHER = "other";
	}
	///<summary>Code Values for the DeviceUdiCarrier.entryType field</summary>
	public sealed class DeviceUdiCarrierEntryTypeCodes {
		public const string BARCODE = "barcode";
		public const string RFID = "rfid";
		public const string MANUAL = "manual";
	}
	///<summary>Code Values for the Expression.language field</summary>
	public sealed class ExpressionLanguageCodes {
		public const string TEXT_CQL = "text/cql";
		public const string TEXT_FHIRPATH = "text/fhirpath";
		public const string APPLICATION_X_FHIR_QUERY = "application/x-fhir-query";
		public const string ETC_ = "etc.";
	}
	///<summary>Code Values for the Extension.valueCode field</summary>
	public sealed class ExtensionValueCodeCodes {
		public const string VALUE = "Value";
	}
	///<summary>Code Values for the Group.type field</summary>
	public sealed class GroupTypeCodes {
		public const string PERSON = "person";
		public const string ANIMAL = "animal";
		public const string PRACTITIONER = "practitioner";
		public const string DEVICE = "device";
		public const string MEDICATION = "medication";
		public const string SUBSTANCE = "substance";
	}
	///<summary>Code Values for the HumanName.use field</summary>
	public sealed class HumanNameUseCodes {
		public const string USUAL = "usual";
		public const string OFFICIAL = "official";
		public const string TEMP = "temp";
		public const string NICKNAME = "nickname";
		public const string ANONYMOUS = "anonymous";
		public const string OLD = "old";
		public const string MAIDEN = "maiden";
	}
	///<summary>Code Values for the Identifier.use field</summary>
	public sealed class IdentifierUseCodes {
		public const string USUAL = "usual";
		public const string OFFICIAL = "official";
		public const string TEMP = "temp";
		public const string SECONDARY = "secondary";
		public const string OLD = "old";
	}
	///<summary>Code Values for the Location.mode field</summary>
	public sealed class LocationModeCodes {
		public const string INSTANCE = "instance";
		public const string KIND = "kind";
	}
	///<summary>Code Values for the Location.status field</summary>
	public sealed class LocationStatusCodes {
		public const string ACTIVE = "active";
		public const string SUSPENDED = "suspended";
		public const string INACTIVE = "inactive";
	}
	///<summary>Code Values for the LocationHoursOfOperation.daysOfWeek field</summary>
	public sealed class LocationHoursOfOperationDaysOfWeekCodes {
		public const string MON = "mon";
		public const string TUE = "tue";
		public const string WED = "wed";
		public const string THU = "thu";
		public const string FRI = "fri";
		public const string SAT = "sat";
		public const string SUN = "sun";
	}
	///<summary>Code Values for the Money.currency field</summary>
	public sealed class MoneyCurrencyCodes {
		public const string ISO = "ISO";
	}
	///<summary>Code Values for the Narrative.status field</summary>
	public sealed class NarrativeStatusCodes {
		public const string GENERATED = "generated";
		public const string EXTENSIONS = "extensions";
		public const string ADDITIONAL = "additional";
		public const string EMPTY = "empty";
	}
	///<summary>Code Values for the ParameterDefinition.name field</summary>
	public sealed class ParameterDefinitionNameCodes {
		public const string NAME = "Name";
	}
	///<summary>Code Values for the ParameterDefinition.type field</summary>
	public sealed class ParameterDefinitionTypeCodes {
		public const string WHAT = "What";
	}
	///<summary>Code Values for the ParameterDefinition.use field</summary>
	public sealed class ParameterDefinitionUseCodes {
		public const string VAL_IN = "in";
		public const string VAL_OUT = "out";
	}
	///<summary>Code Values for the Quantity.code field</summary>
	public sealed class QuantityCodeCodes {
		public const string CODED = "Coded";
	}
	///<summary>Code Values for the Quantity.comparator field</summary>
	public sealed class QuantityComparatorCodes {
		public const string LESS_THAN = "<";
		public const string LESS_THAN_OR_EQUALS = "<=";
		public const string GREATER_THAN_OR_EQUALS = ">=";
		public const string GREATER_THAN = ">";
	}
	///<summary>Code Values for the RelatedArtifact.type field</summary>
	public sealed class RelatedArtifactTypeCodes {
		public const string DOCUMENTATION = "documentation";
		public const string JUSTIFICATION = "justification";
		public const string CITATION = "citation";
		public const string PREDECESSOR = "predecessor";
		public const string SUCCESSOR = "successor";
		public const string DERIVED_FROM = "derived-from";
		public const string DEPENDS_ON = "depends-on";
		public const string COMPOSED_OF = "composed-of";
	}
	///<summary>Code Values for the Resource.language field</summary>
	public sealed class ResourceLanguageCodes {
		public const string LANGUAGE = "Language";
	}
	///<summary>Code Values for the Signature.sigFormat field</summary>
	public sealed class SignatureSigFormatCodes {
		public const string THE = "The";
	}
	///<summary>Code Values for the Signature.targetFormat field</summary>
	public sealed class SignatureTargetFormatCodes {
		public const string THE = "The";
	}
	///<summary>Code Values for the TimingRepeat.dayOfWeek field</summary>
	public sealed class TimingRepeatDayOfWeekCodes {
		public const string MON = "mon";
		public const string TUE = "tue";
		public const string WED = "wed";
		public const string THU = "thu";
		public const string FRI = "fri";
		public const string SAT = "sat";
		public const string SUN = "sun";
	}
	///<summary>Code Values for the TimingRepeat.durationUnit field</summary>
	public sealed class TimingRepeatDurationUnitCodes {
		public const string S = "s";
		public const string MIN = "min";
		public const string H = "h";
		public const string D = "d";
		public const string WK = "wk";
		public const string MO = "mo";
		public const string A = "a";
	}
	///<summary>Code Values for the TimingRepeat.periodUnit field</summary>
	public sealed class TimingRepeatPeriodUnitCodes {
		public const string S = "s";
		public const string MIN = "min";
		public const string H = "h";
		public const string D = "d";
		public const string WK = "wk";
		public const string MO = "mo";
		public const string A = "a";
	}
	///<summary>Code Values for the TimingRepeat.when field</summary>
	public sealed class TimingRepeatWhenCodes {
		public const string CODE = "Code";
	}
	///<summary>Code Values for the TriggerDefinition.type field</summary>
	public sealed class TriggerDefinitionTypeCodes {
		public const string NAMED_EVENT = "named-event";
		public const string PERIODIC = "periodic";
		public const string DATA_CHANGED = "data-changed";
		public const string DATA_ADDED = "data-added";
		public const string DATA_MODIFIED = "data-modified";
		public const string DATA_REMOVED = "data-removed";
		public const string DATA_ACCESSED = "data-accessed";
		public const string DATA_ACCESS_ENDED = "data-access-ended";
	}
	///<summary>Possible types of subjects.</summary>
	public abstract class SubjectType
	{
		///<summary>A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.</summary>
		public static readonly Coding Account = new Coding
		{
			Code = "Account",
			Display = "Account",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.</summary>
		public static readonly Coding ActivityDefinition = new Coding
		{
			Code = "ActivityDefinition",
			Display = "ActivityDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A pharmaceutical product described in terms of its composition and dose form.</summary>
		public static readonly Coding AdministrableProductDefinition = new Coding
		{
			Code = "AdministrableProductDefinition",
			Display = "AdministrableProductDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research subject.  The unintended effects may require additional monitoring, treatment or hospitalization or may result in death.  The AdverseEvent resource also extends to potential or avoided events that could have had such effects.</summary>
		public static readonly Coding AdverseEvent = new Coding
		{
			Code = "AdverseEvent",
			Display = "AdverseEvent",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.</summary>
		public static readonly Coding AllergyIntolerance = new Coding
		{
			Code = "AllergyIntolerance",
			Display = "AllergyIntolerance",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).</summary>
		public static readonly Coding Appointment = new Coding
		{
			Code = "Appointment",
			Display = "Appointment",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.</summary>
		public static readonly Coding AppointmentResponse = new Coding
		{
			Code = "AppointmentResponse",
			Display = "AppointmentResponse",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.</summary>
		public static readonly Coding AuditEvent = new Coding
		{
			Code = "AuditEvent",
			Display = "AuditEvent",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.</summary>
		public static readonly Coding Basic = new Coding
		{
			Code = "Basic",
			Display = "Basic",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.</summary>
		public static readonly Coding Binary = new Coding
		{
			Code = "Binary",
			Display = "Binary",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A material substance originating from a biological entity intended to be transplanted or infused
		/// into another (possibly the same) biological entity.</summary>
		public static readonly Coding BiologicallyDerivedProduct = new Coding
		{
			Code = "BiologicallyDerivedProduct",
			Display = "BiologicallyDerivedProduct",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.</summary>
		public static readonly Coding BodyStructure = new Coding
		{
			Code = "BodyStructure",
			Display = "BodyStructure",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A container for a collection of resources.</summary>
		public static readonly Coding Bundle = new Coding
		{
			Code = "Bundle",
			Display = "Bundle",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.</summary>
		public static readonly Coding CapabilityStatement = new Coding
		{
			Code = "CapabilityStatement",
			Display = "CapabilityStatement",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.</summary>
		public static readonly Coding CapabilityStatement2 = new Coding
		{
			Code = "CapabilityStatement2",
			Display = "CapabilityStatement2",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.</summary>
		public static readonly Coding CarePlan = new Coding
		{
			Code = "CarePlan",
			Display = "CarePlan",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.</summary>
		public static readonly Coding CareTeam = new Coding
		{
			Code = "CareTeam",
			Display = "CareTeam",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Catalog entries are wrappers that contextualize items included in a catalog.</summary>
		public static readonly Coding CatalogEntry = new Coding
		{
			Code = "CatalogEntry",
			Display = "CatalogEntry",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.</summary>
		public static readonly Coding ChargeItem = new Coding
		{
			Code = "ChargeItem",
			Display = "ChargeItem",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.</summary>
		public static readonly Coding ChargeItemDefinition = new Coding
		{
			Code = "ChargeItemDefinition",
			Display = "ChargeItemDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.</summary>
		public static readonly Coding Claim = new Coding
		{
			Code = "Claim",
			Display = "Claim",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides the adjudication details from the processing of a Claim resource.</summary>
		public static readonly Coding ClaimResponse = new Coding
		{
			Code = "ClaimResponse",
			Display = "ClaimResponse",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.</summary>
		public static readonly Coding ClinicalImpression = new Coding
		{
			Code = "ClinicalImpression",
			Display = "ClinicalImpression",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A single item of clinical particulars - an indication, contraindication, interaction etc. for a medicinal product.</summary>
		public static readonly Coding ClinicalUseIssue = new Coding
		{
			Code = "ClinicalUseIssue",
			Display = "ClinicalUseIssue",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.</summary>
		public static readonly Coding CodeSystem = new Coding
		{
			Code = "CodeSystem",
			Display = "CodeSystem",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.</summary>
		public static readonly Coding Communication = new Coding
		{
			Code = "Communication",
			Display = "Communication",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.</summary>
		public static readonly Coding CommunicationRequest = new Coding
		{
			Code = "CommunicationRequest",
			Display = "CommunicationRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A compartment definition that defines how resources are accessed on a server.</summary>
		public static readonly Coding CompartmentDefinition = new Coding
		{
			Code = "CompartmentDefinition",
			Display = "CompartmentDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).</summary>
		public static readonly Coding Composition = new Coding
		{
			Code = "Composition",
			Display = "Composition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.</summary>
		public static readonly Coding ConceptMap = new Coding
		{
			Code = "ConceptMap",
			Display = "ConceptMap",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.</summary>
		public static readonly Coding Condition = new Coding
		{
			Code = "Condition",
			Display = "Condition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A definition of a condition and information relevant to managing it.</summary>
		public static readonly Coding ConditionDefinition = new Coding
		{
			Code = "ConditionDefinition",
			Display = "ConditionDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.</summary>
		public static readonly Coding Consent = new Coding
		{
			Code = "Consent",
			Display = "Consent",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.</summary>
		public static readonly Coding Contract = new Coding
		{
			Code = "Contract",
			Display = "Contract",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.</summary>
		public static readonly Coding Coverage = new Coding
		{
			Code = "Coverage",
			Display = "Coverage",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.</summary>
		public static readonly Coding CoverageEligibilityRequest = new Coding
		{
			Code = "CoverageEligibilityRequest",
			Display = "CoverageEligibilityRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.</summary>
		public static readonly Coding CoverageEligibilityResponse = new Coding
		{
			Code = "CoverageEligibilityResponse",
			Display = "CoverageEligibilityResponse",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.</summary>
		public static readonly Coding DetectedIssue = new Coding
		{
			Code = "DetectedIssue",
			Display = "DetectedIssue",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.</summary>
		public static readonly Coding Device = new Coding
		{
			Code = "Device",
			Display = "Device",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The characteristics, operational status and capabilities of a medical-related component of a medical device.</summary>
		public static readonly Coding DeviceDefinition = new Coding
		{
			Code = "DeviceDefinition",
			Display = "DeviceDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes a measurement, calculation or setting capability of a medical device.</summary>
		public static readonly Coding DeviceMetric = new Coding
		{
			Code = "DeviceMetric",
			Display = "DeviceMetric",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.</summary>
		public static readonly Coding DeviceRequest = new Coding
		{
			Code = "DeviceRequest",
			Display = "DeviceRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.</summary>
		public static readonly Coding DeviceUseStatement = new Coding
		{
			Code = "DeviceUseStatement",
			Display = "DeviceUseStatement",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.</summary>
		public static readonly Coding DiagnosticReport = new Coding
		{
			Code = "DiagnosticReport",
			Display = "DiagnosticReport",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A collection of documents compiled for a purpose together with metadata that applies to the collection.</summary>
		public static readonly Coding DocumentManifest = new Coding
		{
			Code = "DocumentManifest",
			Display = "DocumentManifest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.</summary>
		public static readonly Coding DocumentReference = new Coding
		{
			Code = "DocumentReference",
			Display = "DocumentReference",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A resource that includes narrative, extensions, and contained resources.</summary>
		public static readonly Coding DomainResource = new Coding
		{
			Code = "DomainResource",
			Display = "DomainResource",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.</summary>
		public static readonly Coding EffectEvidenceSynthesis = new Coding
		{
			Code = "EffectEvidenceSynthesis",
			Display = "EffectEvidenceSynthesis",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.</summary>
		public static readonly Coding Encounter = new Coding
		{
			Code = "Encounter",
			Display = "Encounter",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.</summary>
		public static readonly Coding Endpoint = new Coding
		{
			Code = "Endpoint",
			Display = "Endpoint",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides the insurance enrollment details to the insurer regarding a specified coverage.</summary>
		public static readonly Coding EnrollmentRequest = new Coding
		{
			Code = "EnrollmentRequest",
			Display = "EnrollmentRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.</summary>
		public static readonly Coding EnrollmentResponse = new Coding
		{
			Code = "EnrollmentResponse",
			Display = "EnrollmentResponse",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.</summary>
		public static readonly Coding EpisodeOfCare = new Coding
		{
			Code = "EpisodeOfCare",
			Display = "EpisodeOfCare",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The EventDefinition resource provides a reusable description of when a particular event can occur.</summary>
		public static readonly Coding EventDefinition = new Coding
		{
			Code = "EventDefinition",
			Display = "EventDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The Evidence resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.</summary>
		public static readonly Coding Evidence = new Coding
		{
			Code = "Evidence",
			Display = "Evidence",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The EvidenceVariable resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.</summary>
		public static readonly Coding EvidenceVariable = new Coding
		{
			Code = "EvidenceVariable",
			Display = "EvidenceVariable",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Example of workflow instance.</summary>
		public static readonly Coding ExampleScenario = new Coding
		{
			Code = "ExampleScenario",
			Display = "ExampleScenario",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.</summary>
		public static readonly Coding ExplanationOfBenefit = new Coding
		{
			Code = "ExplanationOfBenefit",
			Display = "ExplanationOfBenefit",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Significant health conditions for a person related to the patient relevant in the context of care for the patient.</summary>
		public static readonly Coding FamilyMemberHistory = new Coding
		{
			Code = "FamilyMemberHistory",
			Display = "FamilyMemberHistory",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Prospective warnings of potential issues when providing care to the patient.</summary>
		public static readonly Coding Flag = new Coding
		{
			Code = "Flag",
			Display = "Flag",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.</summary>
		public static readonly Coding Goal = new Coding
		{
			Code = "Goal",
			Display = "Goal",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.</summary>
		public static readonly Coding GraphDefinition = new Coding
		{
			Code = "GraphDefinition",
			Display = "GraphDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.</summary>
		public static readonly Coding Group = new Coding
		{
			Code = "Group",
			Display = "Group",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.</summary>
		public static readonly Coding GuidanceResponse = new Coding
		{
			Code = "GuidanceResponse",
			Display = "GuidanceResponse",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The details of a healthcare service available at a location.</summary>
		public static readonly Coding HealthcareService = new Coding
		{
			Code = "HealthcareService",
			Display = "HealthcareService",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.</summary>
		public static readonly Coding ImagingStudy = new Coding
		{
			Code = "ImagingStudy",
			Display = "ImagingStudy",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.</summary>
		public static readonly Coding Immunization = new Coding
		{
			Code = "Immunization",
			Display = "Immunization",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.</summary>
		public static readonly Coding ImmunizationEvaluation = new Coding
		{
			Code = "ImmunizationEvaluation",
			Display = "ImmunizationEvaluation",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.</summary>
		public static readonly Coding ImmunizationRecommendation = new Coding
		{
			Code = "ImmunizationRecommendation",
			Display = "ImmunizationRecommendation",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.</summary>
		public static readonly Coding ImplementationGuide = new Coding
		{
			Code = "ImplementationGuide",
			Display = "ImplementationGuide",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An ingredient of a manufactured item or pharmaceutical product.</summary>
		public static readonly Coding Ingredient = new Coding
		{
			Code = "Ingredient",
			Display = "Ingredient",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Details of a Health Insurance product/plan provided by an organization.</summary>
		public static readonly Coding InsurancePlan = new Coding
		{
			Code = "InsurancePlan",
			Display = "InsurancePlan",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.</summary>
		public static readonly Coding Invoice = new Coding
		{
			Code = "Invoice",
			Display = "Invoice",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.</summary>
		public static readonly Coding Library = new Coding
		{
			Code = "Library",
			Display = "Library",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Identifies two or more records (resource instances) that refer to the same real-world "occurrence".</summary>
		public static readonly Coding Linkage = new Coding
		{
			Code = "Linkage",
			Display = "Linkage",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A list is a curated collection of resources.</summary>
		public static readonly Coding List = new Coding
		{
			Code = "List",
			Display = "List",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.</summary>
		public static readonly Coding Location = new Coding
		{
			Code = "Location",
			Display = "Location",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The manufactured item as contained in the packaged medicinal product.</summary>
		public static readonly Coding ManufacturedItemDefinition = new Coding
		{
			Code = "ManufacturedItemDefinition",
			Display = "ManufacturedItemDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The Measure resource provides the definition of a quality measure.</summary>
		public static readonly Coding Measure = new Coding
		{
			Code = "Measure",
			Display = "Measure",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.</summary>
		public static readonly Coding MeasureReport = new Coding
		{
			Code = "MeasureReport",
			Display = "MeasureReport",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.</summary>
		public static readonly Coding Media = new Coding
		{
			Code = "Media",
			Display = "Media",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.</summary>
		public static readonly Coding Medication = new Coding
		{
			Code = "Medication",
			Display = "Medication",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.</summary>
		public static readonly Coding MedicationAdministration = new Coding
		{
			Code = "MedicationAdministration",
			Display = "MedicationAdministration",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.</summary>
		public static readonly Coding MedicationDispense = new Coding
		{
			Code = "MedicationDispense",
			Display = "MedicationDispense",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Information about a medication that is used to support knowledge.</summary>
		public static readonly Coding MedicationKnowledge = new Coding
		{
			Code = "MedicationKnowledge",
			Display = "MedicationKnowledge",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.</summary>
		public static readonly Coding MedicationRequest = new Coding
		{
			Code = "MedicationRequest",
			Display = "MedicationRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of a medication that is being consumed by a patient.   A MedicationUsage may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. 
		/// 
		/// The primary difference between a medicationusage and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medicationusage is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the Medication Usage information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.</summary>
		public static readonly Coding MedicationUsage = new Coding
		{
			Code = "MedicationUsage",
			Display = "MedicationUsage",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).</summary>
		public static readonly Coding MedicinalProductDefinition = new Coding
		{
			Code = "MedicinalProductDefinition",
			Display = "MedicinalProductDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.</summary>
		public static readonly Coding MessageDefinition = new Coding
		{
			Code = "MessageDefinition",
			Display = "MessageDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.</summary>
		public static readonly Coding MessageHeader = new Coding
		{
			Code = "MessageHeader",
			Display = "MessageHeader",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Raw data describing a biological sequence.</summary>
		public static readonly Coding MolecularSequence = new Coding
		{
			Code = "MolecularSequence",
			Display = "MolecularSequence",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.</summary>
		public static readonly Coding NamingSystem = new Coding
		{
			Code = "NamingSystem",
			Display = "NamingSystem",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.</summary>
		public static readonly Coding NutritionOrder = new Coding
		{
			Code = "NutritionOrder",
			Display = "NutritionOrder",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Measurements and simple assertions made about a patient, device or other subject.</summary>
		public static readonly Coding Observation = new Coding
		{
			Code = "Observation",
			Display = "Observation",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.</summary>
		public static readonly Coding ObservationDefinition = new Coding
		{
			Code = "ObservationDefinition",
			Display = "ObservationDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).</summary>
		public static readonly Coding OperationDefinition = new Coding
		{
			Code = "OperationDefinition",
			Display = "OperationDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A collection of error, warning, or information messages that result from a system action.</summary>
		public static readonly Coding OperationOutcome = new Coding
		{
			Code = "OperationOutcome",
			Display = "OperationOutcome",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.</summary>
		public static readonly Coding Organization = new Coding
		{
			Code = "Organization",
			Display = "Organization",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.</summary>
		public static readonly Coding OrganizationAffiliation = new Coding
		{
			Code = "OrganizationAffiliation",
			Display = "OrganizationAffiliation",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A medicinal product in a container or package.</summary>
		public static readonly Coding PackagedProductDefinition = new Coding
		{
			Code = "PackagedProductDefinition",
			Display = "PackagedProductDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.</summary>
		public static readonly Coding Parameters = new Coding
		{
			Code = "Parameters",
			Display = "Parameters",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Demographics and other administrative information about an individual or animal receiving care or other health-related services.</summary>
		public static readonly Coding Patient = new Coding
		{
			Code = "Patient",
			Display = "Patient",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides the status of the payment for goods and services rendered, and the request and response resource references.</summary>
		public static readonly Coding PaymentNotice = new Coding
		{
			Code = "PaymentNotice",
			Display = "PaymentNotice",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource provides the details including amount of a payment and allocates the payment items being paid.</summary>
		public static readonly Coding PaymentReconciliation = new Coding
		{
			Code = "PaymentReconciliation",
			Display = "PaymentReconciliation",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Demographics and administrative information about a person independent of a specific health-related context.</summary>
		public static readonly Coding Person = new Coding
		{
			Code = "Person",
			Display = "Person",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.</summary>
		public static readonly Coding PlanDefinition = new Coding
		{
			Code = "PlanDefinition",
			Display = "PlanDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A person who is directly or indirectly involved in the provisioning of healthcare.</summary>
		public static readonly Coding Practitioner = new Coding
		{
			Code = "Practitioner",
			Display = "Practitioner",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.</summary>
		public static readonly Coding PractitionerRole = new Coding
		{
			Code = "PractitionerRole",
			Display = "PractitionerRole",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.</summary>
		public static readonly Coding Procedure = new Coding
		{
			Code = "Procedure",
			Display = "Procedure",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.</summary>
		public static readonly Coding Provenance = new Coding
		{
			Code = "Provenance",
			Display = "Provenance",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.</summary>
		public static readonly Coding Questionnaire = new Coding
		{
			Code = "Questionnaire",
			Display = "Questionnaire",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.</summary>
		public static readonly Coding QuestionnaireResponse = new Coding
		{
			Code = "QuestionnaireResponse",
			Display = "QuestionnaireResponse",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The regulatory authorization of a medicinal product.</summary>
		public static readonly Coding RegulatedAuthorization = new Coding
		{
			Code = "RegulatedAuthorization",
			Display = "RegulatedAuthorization",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.</summary>
		public static readonly Coding RelatedPerson = new Coding
		{
			Code = "RelatedPerson",
			Display = "RelatedPerson",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".</summary>
		public static readonly Coding RequestGroup = new Coding
		{
			Code = "RequestGroup",
			Display = "RequestGroup",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.</summary>
		public static readonly Coding ResearchDefinition = new Coding
		{
			Code = "ResearchDefinition",
			Display = "ResearchDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.</summary>
		public static readonly Coding ResearchElementDefinition = new Coding
		{
			Code = "ResearchElementDefinition",
			Display = "ResearchElementDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.</summary>
		public static readonly Coding ResearchStudy = new Coding
		{
			Code = "ResearchStudy",
			Display = "ResearchStudy",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A physical entity which is the primary unit of operational and/or administrative interest in a study.</summary>
		public static readonly Coding ResearchSubject = new Coding
		{
			Code = "ResearchSubject",
			Display = "ResearchSubject",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>This is the base resource type for everything.</summary>
		public static readonly Coding Resource = new Coding
		{
			Code = "Resource",
			Display = "Resource",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.</summary>
		public static readonly Coding RiskAssessment = new Coding
		{
			Code = "RiskAssessment",
			Display = "RiskAssessment",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.</summary>
		public static readonly Coding RiskEvidenceSynthesis = new Coding
		{
			Code = "RiskEvidenceSynthesis",
			Display = "RiskEvidenceSynthesis",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A container for slots of time that may be available for booking appointments.</summary>
		public static readonly Coding Schedule = new Coding
		{
			Code = "Schedule",
			Display = "Schedule",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A search parameter that defines a named search item that can be used to search/filter on a resource.</summary>
		public static readonly Coding SearchParameter = new Coding
		{
			Code = "SearchParameter",
			Display = "SearchParameter",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.</summary>
		public static readonly Coding ServiceRequest = new Coding
		{
			Code = "ServiceRequest",
			Display = "ServiceRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A slot of time on a schedule that may be available for booking appointments.</summary>
		public static readonly Coding Slot = new Coding
		{
			Code = "Slot",
			Display = "Slot",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A sample to be used for analysis.</summary>
		public static readonly Coding Specimen = new Coding
		{
			Code = "Specimen",
			Display = "Specimen",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A kind of specimen with associated set of requirements.</summary>
		public static readonly Coding SpecimenDefinition = new Coding
		{
			Code = "SpecimenDefinition",
			Display = "SpecimenDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The Statistic resource codifies a statistical measure and corresponding certainty.</summary>
		public static readonly Coding Statistic = new Coding
		{
			Code = "Statistic",
			Display = "Statistic",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.</summary>
		public static readonly Coding StructureDefinition = new Coding
		{
			Code = "StructureDefinition",
			Display = "StructureDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A Map of relationships between 2 structures that can be used to transform data.</summary>
		public static readonly Coding StructureMap = new Coding
		{
			Code = "StructureMap",
			Display = "StructureMap",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The subscription resource describes a particular client's request to be notified about a Topic.</summary>
		public static readonly Coding Subscription = new Coding
		{
			Code = "Subscription",
			Display = "Subscription",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A homogeneous material with a definite composition.</summary>
		public static readonly Coding Substance = new Coding
		{
			Code = "Substance",
			Display = "Substance",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>The detailed description of a substance, typically at a level beyond what is used for prescribing.</summary>
		public static readonly Coding SubstanceDefinition = new Coding
		{
			Code = "SubstanceDefinition",
			Display = "SubstanceDefinition",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.</summary>
		public static readonly Coding SubstanceNucleicAcid = new Coding
		{
			Code = "SubstanceNucleicAcid",
			Display = "SubstanceNucleicAcid",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Todo.</summary>
		public static readonly Coding SubstancePolymer = new Coding
		{
			Code = "SubstancePolymer",
			Display = "SubstancePolymer",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.</summary>
		public static readonly Coding SubstanceProtein = new Coding
		{
			Code = "SubstanceProtein",
			Display = "SubstanceProtein",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Todo.</summary>
		public static readonly Coding SubstanceReferenceInformation = new Coding
		{
			Code = "SubstanceReferenceInformation",
			Display = "SubstanceReferenceInformation",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.</summary>
		public static readonly Coding SubstanceSourceMaterial = new Coding
		{
			Code = "SubstanceSourceMaterial",
			Display = "SubstanceSourceMaterial",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Record of delivery of what is supplied.</summary>
		public static readonly Coding SupplyDelivery = new Coding
		{
			Code = "SupplyDelivery",
			Display = "SupplyDelivery",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A record of a request for a medication, substance or device used in the healthcare setting.</summary>
		public static readonly Coding SupplyRequest = new Coding
		{
			Code = "SupplyRequest",
			Display = "SupplyRequest",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A task to be performed.</summary>
		public static readonly Coding Task = new Coding
		{
			Code = "Task",
			Display = "Task",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.</summary>
		public static readonly Coding TerminologyCapabilities = new Coding
		{
			Code = "TerminologyCapabilities",
			Display = "TerminologyCapabilities",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A summary of information based on the results of executing a TestScript.</summary>
		public static readonly Coding TestReport = new Coding
		{
			Code = "TestReport",
			Display = "TestReport",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.</summary>
		public static readonly Coding TestScript = new Coding
		{
			Code = "TestScript",
			Display = "TestScript",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.</summary>
		public static readonly Coding Topic = new Coding
		{
			Code = "Topic",
			Display = "Topic",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).</summary>
		public static readonly Coding ValueSet = new Coding
		{
			Code = "ValueSet",
			Display = "ValueSet",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>Describes validation requirements, source(s), status and dates for one or more elements.</summary>
		public static readonly Coding VerificationResult = new Coding
		{
			Code = "VerificationResult",
			Display = "VerificationResult",
			System = "http://hl7.org/fhir/resource-types"
		};
		///<summary>An authorization for the provision of glasses and/or contact lenses to a patient.</summary>
		public static readonly Coding VisionPrescription = new Coding
		{
			Code = "VisionPrescription",
			Display = "VisionPrescription",
			System = "http://hl7.org/fhir/resource-types"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/subject-type</summary>
	public abstract class DataRequirementSubjectCodeableConceptValues : SubjectType { }
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/subject-type</summary>
	public abstract class DataRequirementSubjectReferenceValues : SubjectType { }
	///<summary>The availability status reason of the device.</summary>
	public abstract class FHIRDeviceStatusReason
	{
		///<summary>The device is off.</summary>
		public static readonly Coding online = new Coding
		{
			Code = "online",
			Display = "Online",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device is paused.</summary>
		public static readonly Coding paused = new Coding
		{
			Code = "paused",
			Display = "Paused",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device is ready but not actively operating.</summary>
		public static readonly Coding standby = new Coding
		{
			Code = "standby",
			Display = "Standby",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device is offline.</summary>
		public static readonly Coding offline = new Coding
		{
			Code = "offline",
			Display = "Offline",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device is not ready.</summary>
		public static readonly Coding not_ready = new Coding
		{
			Code = "not-ready",
			Display = "Not Ready",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device transducer is disconnected.</summary>
		public static readonly Coding transduc_discon = new Coding
		{
			Code = "transduc-discon",
			Display = "Transducer Disconnected",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device hardware is disconnected.</summary>
		public static readonly Coding hw_discon = new Coding
		{
			Code = "hw-discon",
			Display = "Hardware Disconnected",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
		///<summary>The device is off.</summary>
		public static readonly Coding off = new Coding
		{
			Code = "off",
			Display = "Off",
			System = "http://terminology.hl7.org/CodeSystem/device-status-reason"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/device-status-reason</summary>
	public abstract class DeviceStatusReasonValues : FHIRDeviceStatusReason { }
	///<summary>The kind of dose or rate specified.</summary>
	public abstract class DoseAndRateType
	{
		///<summary>The dose specified is calculated by the prescriber or the system.</summary>
		public static readonly Coding calculated = new Coding
		{
			Code = "calculated",
			Display = "Calculated",
			System = "http://terminology.hl7.org/CodeSystem/dose-rate-type"
		};
		///<summary>The dose specified is as ordered by the prescriber.</summary>
		public static readonly Coding ordered = new Coding
		{
			Code = "ordered",
			Display = "Ordered",
			System = "http://terminology.hl7.org/CodeSystem/dose-rate-type"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/dose-rate-type</summary>
	public abstract class DosageDoseAndRateTypeValues : DoseAndRateType { }
	///<summary>A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.</summary>
	public abstract class Identifier_Type_Codes
	{
		///<summary>Accreditation/Certification Identifier</summary>
		public static readonly Coding AC = new Coding
		{
			Code = "AC",
			Display = "Accreditation/Certification Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Accession ID</summary>
		public static readonly Coding ACSN = new Coding
		{
			Code = "ACSN",
			Display = "Accession ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>American Express</summary>
		public static readonly Coding AM = new Coding
		{
			Code = "AM",
			Display = "American Express",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>American Medical Association Number</summary>
		public static readonly Coding AMA = new Coding
		{
			Code = "AMA",
			Display = "American Medical Association Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Account number</summary>
		public static readonly Coding AN = new Coding
		{
			Code = "AN",
			Display = "Account number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Account number Creditor</summary>
		public static readonly Coding ANC = new Coding
		{
			Code = "ANC",
			Display = "Account number Creditor",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Account number debitor</summary>
		public static readonly Coding AND = new Coding
		{
			Code = "AND",
			Display = "Account number debitor",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Anonymous identifier</summary>
		public static readonly Coding ANON = new Coding
		{
			Code = "ANON",
			Display = "Anonymous identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Temporary Account Number</summary>
		public static readonly Coding ANT = new Coding
		{
			Code = "ANT",
			Display = "Temporary Account Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Advanced Practice Registered Nurse number</summary>
		public static readonly Coding APRN = new Coding
		{
			Code = "APRN",
			Display = "Advanced Practice Registered Nurse number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Ancestor Specimen ID</summary>
		public static readonly Coding ASID = new Coding
		{
			Code = "ASID",
			Display = "Ancestor Specimen ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Bank Account Number</summary>
		public static readonly Coding BA = new Coding
		{
			Code = "BA",
			Display = "Bank Account Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Bank Card Number</summary>
		public static readonly Coding BC = new Coding
		{
			Code = "BC",
			Display = "Bank Card Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Birth Certificate File Number</summary>
		public static readonly Coding BCFN = new Coding
		{
			Code = "BCFN",
			Display = "Birth Certificate File Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Birth Certificate</summary>
		public static readonly Coding BCT = new Coding
		{
			Code = "BCT",
			Display = "Birth Certificate",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Birth registry number</summary>
		public static readonly Coding BR = new Coding
		{
			Code = "BR",
			Display = "Birth registry number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Breed Registry Number</summary>
		public static readonly Coding BRN = new Coding
		{
			Code = "BRN",
			Display = "Breed Registry Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Primary physician office number</summary>
		public static readonly Coding BSNR = new Coding
		{
			Code = "BSNR",
			Display = "Primary physician office number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Cost Center number</summary>
		public static readonly Coding CC = new Coding
		{
			Code = "CC",
			Display = "Cost Center number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Change of Name Document</summary>
		public static readonly Coding CONM = new Coding
		{
			Code = "CONM",
			Display = "Change of Name Document",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>County number</summary>
		public static readonly Coding CY = new Coding
		{
			Code = "CY",
			Display = "County number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Citizenship Card</summary>
		public static readonly Coding CZ = new Coding
		{
			Code = "CZ",
			Display = "Citizenship Card",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Death Certificate ID</summary>
		public static readonly Coding DC = new Coding
		{
			Code = "DC",
			Display = "Death Certificate ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Death Certificate File Number</summary>
		public static readonly Coding DCFN = new Coding
		{
			Code = "DCFN",
			Display = "Death Certificate File Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Dentist license number</summary>
		public static readonly Coding DDS = new Coding
		{
			Code = "DDS",
			Display = "Dentist license number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Drug Enforcement Administration registration number</summary>
		public static readonly Coding DEA = new Coding
		{
			Code = "DEA",
			Display = "Drug Enforcement Administration registration number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Drug Furnishing or prescriptive authority Number</summary>
		public static readonly Coding DFN = new Coding
		{
			Code = "DFN",
			Display = "Drug Furnishing or prescriptive authority Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Diner's Club card</summary>
		public static readonly Coding DI = new Coding
		{
			Code = "DI",
			Display = "Diner's Club card",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Driver's license number</summary>
		public static readonly Coding DL = new Coding
		{
			Code = "DL",
			Display = "Driver's license number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Doctor number</summary>
		public static readonly Coding DN = new Coding
		{
			Code = "DN",
			Display = "Doctor number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Osteopathic License number</summary>
		public static readonly Coding DO = new Coding
		{
			Code = "DO",
			Display = "Osteopathic License number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Diplomatic Passport</summary>
		public static readonly Coding DP = new Coding
		{
			Code = "DP",
			Display = "Diplomatic Passport",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Podiatrist license number</summary>
		public static readonly Coding DPM = new Coding
		{
			Code = "DPM",
			Display = "Podiatrist license number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Donor Registration Number</summary>
		public static readonly Coding DR = new Coding
		{
			Code = "DR",
			Display = "Donor Registration Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Discover Card</summary>
		public static readonly Coding DS = new Coding
		{
			Code = "DS",
			Display = "Discover Card",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Employee number</summary>
		public static readonly Coding EI = new Coding
		{
			Code = "EI",
			Display = "Employee number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Employer number</summary>
		public static readonly Coding EN = new Coding
		{
			Code = "EN",
			Display = "Employer number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Staff Enterprise Number</summary>
		public static readonly Coding ESN = new Coding
		{
			Code = "ESN",
			Display = "Staff Enterprise Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Fetal Death Report ID</summary>
		public static readonly Coding FDR = new Coding
		{
			Code = "FDR",
			Display = "Fetal Death Report ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Fetal Death Report File Number</summary>
		public static readonly Coding FDRFN = new Coding
		{
			Code = "FDRFN",
			Display = "Fetal Death Report File Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Facility ID</summary>
		public static readonly Coding FI = new Coding
		{
			Code = "FI",
			Display = "Facility ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Filler Identifier</summary>
		public static readonly Coding FILL = new Coding
		{
			Code = "FILL",
			Display = "Filler Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Guarantor internal identifier</summary>
		public static readonly Coding GI = new Coding
		{
			Code = "GI",
			Display = "Guarantor internal identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>General ledger number</summary>
		public static readonly Coding GL = new Coding
		{
			Code = "GL",
			Display = "General ledger number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Guarantor external  identifier</summary>
		public static readonly Coding GN = new Coding
		{
			Code = "GN",
			Display = "Guarantor external  identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Health Card Number</summary>
		public static readonly Coding HC = new Coding
		{
			Code = "HC",
			Display = "Health Card Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Indigenous/Aboriginal</summary>
		public static readonly Coding IND = new Coding
		{
			Code = "IND",
			Display = "Indigenous/Aboriginal",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Jurisdictional health number (Canada)</summary>
		public static readonly Coding JHN = new Coding
		{
			Code = "JHN",
			Display = "Jurisdictional health number (Canada)",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Laboratory Accession ID</summary>
		public static readonly Coding LACSN = new Coding
		{
			Code = "LACSN",
			Display = "Laboratory Accession ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Lifelong physician number</summary>
		public static readonly Coding LANR = new Coding
		{
			Code = "LANR",
			Display = "Lifelong physician number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Labor and industries number</summary>
		public static readonly Coding LI = new Coding
		{
			Code = "LI",
			Display = "Labor and industries number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>License number</summary>
		public static readonly Coding LN = new Coding
		{
			Code = "LN",
			Display = "License number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Local Registry ID</summary>
		public static readonly Coding LR = new Coding
		{
			Code = "LR",
			Display = "Local Registry ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Patient Medicaid number</summary>
		public static readonly Coding MA = new Coding
		{
			Code = "MA",
			Display = "Patient Medicaid number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Member Number</summary>
		public static readonly Coding MB = new Coding
		{
			Code = "MB",
			Display = "Member Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Patient's Medicare number</summary>
		public static readonly Coding MC = new Coding
		{
			Code = "MC",
			Display = "Patient's Medicare number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Practitioner Medicaid number</summary>
		public static readonly Coding MCD = new Coding
		{
			Code = "MCD",
			Display = "Practitioner Medicaid number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Microchip Number</summary>
		public static readonly Coding MCN = new Coding
		{
			Code = "MCN",
			Display = "Microchip Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Practitioner Medicare number</summary>
		public static readonly Coding MCR = new Coding
		{
			Code = "MCR",
			Display = "Practitioner Medicare number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Marriage Certificate</summary>
		public static readonly Coding MCT = new Coding
		{
			Code = "MCT",
			Display = "Marriage Certificate",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Medical License number</summary>
		public static readonly Coding MD = new Coding
		{
			Code = "MD",
			Display = "Medical License number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Military ID number</summary>
		public static readonly Coding MI = new Coding
		{
			Code = "MI",
			Display = "Military ID number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Medical record number</summary>
		public static readonly Coding MR = new Coding
		{
			Code = "MR",
			Display = "Medical record number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Temporary Medical Record Number</summary>
		public static readonly Coding MRT = new Coding
		{
			Code = "MRT",
			Display = "Temporary Medical Record Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>MasterCard</summary>
		public static readonly Coding MS = new Coding
		{
			Code = "MS",
			Display = "MasterCard",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Secondary physician office number</summary>
		public static readonly Coding NBSNR = new Coding
		{
			Code = "NBSNR",
			Display = "Secondary physician office number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Naturalization Certificate</summary>
		public static readonly Coding NCT = new Coding
		{
			Code = "NCT",
			Display = "Naturalization Certificate",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National employer identifier</summary>
		public static readonly Coding NE = new Coding
		{
			Code = "NE",
			Display = "National employer identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National Health Plan Identifier</summary>
		public static readonly Coding NH = new Coding
		{
			Code = "NH",
			Display = "National Health Plan Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National unique individual identifier</summary>
		public static readonly Coding NI = new Coding
		{
			Code = "NI",
			Display = "National unique individual identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National Insurance Organization Identifier</summary>
		public static readonly Coding NII = new Coding
		{
			Code = "NII",
			Display = "National Insurance Organization Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National Insurance Payor Identifier (Payor)</summary>
		public static readonly Coding NIIP = new Coding
		{
			Code = "NIIP",
			Display = "National Insurance Payor Identifier (Payor)",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code</summary>
		public static readonly Coding NNxxx = new Coding
		{
			Code = "NNxxx",
			Display = "National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Nurse practitioner number</summary>
		public static readonly Coding NP = new Coding
		{
			Code = "NP",
			Display = "Nurse practitioner number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>National provider identifier</summary>
		public static readonly Coding NPI = new Coding
		{
			Code = "NPI",
			Display = "National provider identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Observation Instance Identifier</summary>
		public static readonly Coding OBI = new Coding
		{
			Code = "OBI",
			Display = "Observation Instance Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Optometrist license number</summary>
		public static readonly Coding OD = new Coding
		{
			Code = "OD",
			Display = "Optometrist license number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Physician Assistant number</summary>
		public static readonly Coding PA = new Coding
		{
			Code = "PA",
			Display = "Physician Assistant number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Parole Card</summary>
		public static readonly Coding PC = new Coding
		{
			Code = "PC",
			Display = "Parole Card",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Penitentiary/correctional institution Number</summary>
		public static readonly Coding PCN = new Coding
		{
			Code = "PCN",
			Display = "Penitentiary/correctional institution Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Living Subject Enterprise Number</summary>
		public static readonly Coding PE = new Coding
		{
			Code = "PE",
			Display = "Living Subject Enterprise Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Pension Number</summary>
		public static readonly Coding PEN = new Coding
		{
			Code = "PEN",
			Display = "Pension Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Public Health Case Identifier</summary>
		public static readonly Coding PHC = new Coding
		{
			Code = "PHC",
			Display = "Public Health Case Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Public Health Event Identifier</summary>
		public static readonly Coding PHE = new Coding
		{
			Code = "PHE",
			Display = "Public Health Event Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Public Health Official ID</summary>
		public static readonly Coding PHO = new Coding
		{
			Code = "PHO",
			Display = "Public Health Official ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Patient internal identifier</summary>
		public static readonly Coding PI = new Coding
		{
			Code = "PI",
			Display = "Patient internal identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Placer Identifier</summary>
		public static readonly Coding PLAC = new Coding
		{
			Code = "PLAC",
			Display = "Placer Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Person number</summary>
		public static readonly Coding PN = new Coding
		{
			Code = "PN",
			Display = "Person number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Temporary Living Subject Number</summary>
		public static readonly Coding PNT = new Coding
		{
			Code = "PNT",
			Display = "Temporary Living Subject Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Medicare/CMS Performing Provider Identification Number</summary>
		public static readonly Coding PPIN = new Coding
		{
			Code = "PPIN",
			Display = "Medicare/CMS Performing Provider Identification Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Passport number</summary>
		public static readonly Coding PPN = new Coding
		{
			Code = "PPN",
			Display = "Passport number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Permanent Resident Card Number</summary>
		public static readonly Coding PRC = new Coding
		{
			Code = "PRC",
			Display = "Permanent Resident Card Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Provider number</summary>
		public static readonly Coding PRN = new Coding
		{
			Code = "PRN",
			Display = "Provider number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Patient external identifier</summary>
		public static readonly Coding PT = new Coding
		{
			Code = "PT",
			Display = "Patient external identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>QA number</summary>
		public static readonly Coding QA = new Coding
		{
			Code = "QA",
			Display = "QA number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Resource identifier</summary>
		public static readonly Coding RI = new Coding
		{
			Code = "RI",
			Display = "Resource identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Registered Nurse Number</summary>
		public static readonly Coding RN = new Coding
		{
			Code = "RN",
			Display = "Registered Nurse Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Pharmacist license number</summary>
		public static readonly Coding RPH = new Coding
		{
			Code = "RPH",
			Display = "Pharmacist license number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Railroad Retirement number</summary>
		public static readonly Coding RR = new Coding
		{
			Code = "RR",
			Display = "Railroad Retirement number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Regional registry ID</summary>
		public static readonly Coding RRI = new Coding
		{
			Code = "RRI",
			Display = "Regional registry ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Railroad Retirement Provider</summary>
		public static readonly Coding RRP = new Coding
		{
			Code = "RRP",
			Display = "Railroad Retirement Provider",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Social Beneficiary Identifier</summary>
		public static readonly Coding SB = new Coding
		{
			Code = "SB",
			Display = "Social Beneficiary Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Specimen ID</summary>
		public static readonly Coding SID = new Coding
		{
			Code = "SID",
			Display = "Specimen ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>State license</summary>
		public static readonly Coding SL = new Coding
		{
			Code = "SL",
			Display = "State license",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Subscriber Number</summary>
		public static readonly Coding SN = new Coding
		{
			Code = "SN",
			Display = "Subscriber Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>State assigned NDBS card Identifier</summary>
		public static readonly Coding SNBSN = new Coding
		{
			Code = "SNBSN",
			Display = "State assigned NDBS card Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Serial Number</summary>
		public static readonly Coding SNO = new Coding
		{
			Code = "SNO",
			Display = "Serial Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Study Permit</summary>
		public static readonly Coding SP = new Coding
		{
			Code = "SP",
			Display = "Study Permit",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>State registry ID</summary>
		public static readonly Coding SR = new Coding
		{
			Code = "SR",
			Display = "State registry ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Social Security number</summary>
		public static readonly Coding SS = new Coding
		{
			Code = "SS",
			Display = "Social Security number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Shipment Tracking Number</summary>
		public static readonly Coding STN = new Coding
		{
			Code = "STN",
			Display = "Shipment Tracking Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Tax ID number</summary>
		public static readonly Coding TAX = new Coding
		{
			Code = "TAX",
			Display = "Tax ID number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Treaty Number/ (Canada)</summary>
		public static readonly Coding TN = new Coding
		{
			Code = "TN",
			Display = "Treaty Number/ (Canada)",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Temporary Permanent Resident (Canada)</summary>
		public static readonly Coding TPR = new Coding
		{
			Code = "TPR",
			Display = "Temporary Permanent Resident (Canada)",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Training License Number</summary>
		public static readonly Coding TRL = new Coding
		{
			Code = "TRL",
			Display = "Training License Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Unspecified identifier</summary>
		public static readonly Coding U = new Coding
		{
			Code = "U",
			Display = "Unspecified identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Universal Device Identifier</summary>
		public static readonly Coding UDI = new Coding
		{
			Code = "UDI",
			Display = "Universal Device Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Medicare/CMS (formerly HCFA)'s Universal Physician Identification numbers</summary>
		public static readonly Coding UPIN = new Coding
		{
			Code = "UPIN",
			Display = "Medicare/CMS (formerly HCFA)'s Universal Physician Identification numbers",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Unique Specimen ID</summary>
		public static readonly Coding USID = new Coding
		{
			Code = "USID",
			Display = "Unique Specimen ID",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Visit number</summary>
		public static readonly Coding VN = new Coding
		{
			Code = "VN",
			Display = "Visit number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Visitor Permit</summary>
		public static readonly Coding VP = new Coding
		{
			Code = "VP",
			Display = "Visitor Permit",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>VISA</summary>
		public static readonly Coding VS = new Coding
		{
			Code = "VS",
			Display = "VISA",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>WIC identifier</summary>
		public static readonly Coding WC = new Coding
		{
			Code = "WC",
			Display = "WIC identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Workers' Comp Number</summary>
		public static readonly Coding WCN = new Coding
		{
			Code = "WCN",
			Display = "Workers' Comp Number",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Work Permit</summary>
		public static readonly Coding WP = new Coding
		{
			Code = "WP",
			Display = "Work Permit",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Health Plan Identifier</summary>
		public static readonly Coding XV = new Coding
		{
			Code = "XV",
			Display = "Health Plan Identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
		///<summary>Organization identifier</summary>
		public static readonly Coding XX = new Coding
		{
			Code = "XX",
			Display = "Organization identifier",
			System = "http://terminology.hl7.org/CodeSystem/v2-0203"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/identifier-type</summary>
	public abstract class IdentifierTypeValues : Identifier_Type_Codes { }
	///<summary>FHIR Value set/code system definition for HL7 v2 table 0116 ( BED STATUS)</summary>
	public abstract class v2_0116
	{
		///<summary>Closed</summary>
		public static readonly Coding C = new Coding
		{
			Code = "C",
			Display = "Closed",
			System = "http://terminology.hl7.org/CodeSystem/v2-0116"
		};
		///<summary>Housekeeping</summary>
		public static readonly Coding H = new Coding
		{
			Code = "H",
			Display = "Housekeeping",
			System = "http://terminology.hl7.org/CodeSystem/v2-0116"
		};
		///<summary>Isolated</summary>
		public static readonly Coding I = new Coding
		{
			Code = "I",
			Display = "Isolated",
			System = "http://terminology.hl7.org/CodeSystem/v2-0116"
		};
		///<summary>Contaminated</summary>
		public static readonly Coding K = new Coding
		{
			Code = "K",
			Display = "Contaminated",
			System = "http://terminology.hl7.org/CodeSystem/v2-0116"
		};
		///<summary>Occupied</summary>
		public static readonly Coding O = new Coding
		{
			Code = "O",
			Display = "Occupied",
			System = "http://terminology.hl7.org/CodeSystem/v2-0116"
		};
        ///<summary>Unoccupied</summary>
        public static readonly Coding U = new Coding
        {
            Code = "U",
            Display = "Unoccupied",
            System = "http://terminology.hl7.org/CodeSystem/v2-0116"
        };
    };
	///<summary>ValueSet alias for http://terminology.hl7.org/ValueSet/v2-0116</summary>
	public abstract class LocationOperationalStatusValues : v2_0116 { }
	///<summary>This example value set defines a set of codes that can be used to indicate the physical form of the Location.</summary>
	public abstract class LocationType
	{
		///<summary>A collection of buildings or other locations such as a site or a campus.</summary>
		public static readonly Coding si = new Coding
		{
			Code = "si",
			Display = "Site",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>Any Building or structure. This may contain rooms, corridors, wings, etc. It might not have walls, or a roof, but is considered a defined/allocated space.</summary>
		public static readonly Coding bu = new Coding
		{
			Code = "bu",
			Display = "Building",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A Wing within a Building, this often contains levels, rooms and corridors.</summary>
		public static readonly Coding wi = new Coding
		{
			Code = "wi",
			Display = "Wing",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A Ward is a section of a medical facility that may contain rooms and other types of location.</summary>
		public static readonly Coding wa = new Coding
		{
			Code = "wa",
			Display = "Ward",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A Level in a multi-level Building/Structure.</summary>
		public static readonly Coding lvl = new Coding
		{
			Code = "lvl",
			Display = "Level",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>Any corridor within a Building, that may connect rooms.</summary>
		public static readonly Coding co = new Coding
		{
			Code = "co",
			Display = "Corridor",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A space that is allocated as a room, it may have walls/roof etc., but does not require these.</summary>
		public static readonly Coding ro = new Coding
		{
			Code = "ro",
			Display = "Room",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A space that is allocated for sleeping/laying on. This is not the physical bed/trolley that may be moved about, but the space it may occupy.</summary>
		public static readonly Coding bd = new Coding
		{
			Code = "bd",
			Display = "Bed",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A means of transportation.</summary>
		public static readonly Coding ve = new Coding
		{
			Code = "ve",
			Display = "Vehicle",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A residential dwelling. Usually used to reference a location that a person/patient may reside.</summary>
		public static readonly Coding ho = new Coding
		{
			Code = "ho",
			Display = "House",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A container that can store goods, equipment, medications or other items.</summary>
		public static readonly Coding ca = new Coding
		{
			Code = "ca",
			Display = "Cabinet",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A defined path to travel between 2 points that has a known name.</summary>
		public static readonly Coding rd = new Coding
		{
			Code = "rd",
			Display = "Road",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A defined physical boundary of something, such as a flood risk zone, region, postcode</summary>
		public static readonly Coding area = new Coding
		{
			Code = "area",
			Display = "Area",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
		///<summary>A wide scope that covers a conceptual domain, such as a Nation (Country wide community or Federal Government - e.g. Ministry of Health),  Province or State (community or Government), Business (throughout the enterprise), Nation with a business scope of an agency (e.g. CDC, FDA etc.) or a Business segment (UK Pharmacy), not just an physical boundary</summary>
		public static readonly Coding jdn = new Coding
		{
			Code = "jdn",
			Display = "Jurisdiction",
			System = "http://terminology.hl7.org/CodeSystem/location-physical-type"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/location-physical-type</summary>
	public abstract class LocationPhysicalTypeValues : LocationType { }
	///<summary>Common Tag Codes defined by FHIR project</summary>
	public abstract class CommonTags
	{
		///<summary>This request is intended to be acted upon, not merely stored</summary>
		public static readonly Coding actionable = new Coding
		{
			Code = "actionable",
			Display = "Actionable",
			System = "http://terminology.hl7.org/CodeSystem/common-tags"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/common-tags</summary>
	public abstract class MetaTagValues : CommonTags { }
	///<summary>One of the resource types defined as part of this version of FHIR.</summary>
	public abstract class ResourceType
	{
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/resource-types</summary>
	public abstract class ReferenceTypeValues : ResourceType { }
	///<summary>The Digital Signature Purposes, an indication of the reason an entity signs a document. This is included in the signed information and can be used when determining accountability for various actions concerning the document. Examples include: author, transcriptionist/recorder, and witness.</summary>
	public abstract class SignatureTypeCodes
	{
		///<summary>indicates that the signer recognizes to have created, approved and sent the signed data object.</summary>
		public static readonly Coding ProofOfOrigin = new Coding
		{
			Code = "ProofOfOrigin",
			Display = "Proof of origin",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>indicates that signer recognizes to have received the content of the signed data object.</summary>
		public static readonly Coding ProofOfReceipt = new Coding
		{
			Code = "ProofOfReceipt",
			Display = "Proof of receipt",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>indicates that the TSP providing that indication has delivered a signed data object in a local store accessible to the recipient of the signed data object.</summary>
		public static readonly Coding ProofOfDelivery = new Coding
		{
			Code = "ProofOfDelivery",
			Display = "Proof of delivery",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>indicates that the entity providing that indication has sent the signed data object (but not necessarily created it).</summary>
		public static readonly Coding ProofOfSender = new Coding
		{
			Code = "ProofOfSender",
			Display = "Proof of sender",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>indicates that the signer has approved the content of the signed data object.</summary>
		public static readonly Coding ProofOfapproval = new Coding
		{
			Code = "ProofOfapproval",
			Display = "Proof of approval",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>indicates that the signer has created the signed data object (but not necessarily approved, nor sent it).</summary>
		public static readonly Coding ProofOfCreation = new Coding
		{
			Code = "ProofOfCreation",
			Display = "Proof of creation",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of the primary or sole author of a health information document. There can be only one primary author of a health information document.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_1 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.1",
			Display = "Author's Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of a health information document coauthor. There can be multiple coauthors of a health information document.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_2 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.2",
			Display = "Coauthor's Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual who is a participant in the health information document but is not an author or coauthor. (Example a surgeon who is required by institutional, regulatory, or legal rules to sign an operative report, but who was not involved in the authorship of that report.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_3 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.3",
			Display = "Co-participant's Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual who has transcribed a dictated document or recorded written text into a digital machine readable format.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_4 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.4",
			Display = "Transcriptionist/Recorder Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>a signature verifying the information contained in a document. (Example a physician is required to countersign a verbal order that has previously been recorded in the medical record by a registered nurse who has carried out the verbal order.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_5 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.5",
			Display = "Verification Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>a signature validating a health information document for inclusion in the patient record. (Example a medical student or resident is credentialed to perform history or physical examinations and to write progress notes. The attending physician signs the history and physical examination to validate the entry for inclusion in the patient's medical record.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_6 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.6",
			Display = "Validation Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual consenting to what is described in a health information document.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_7 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.7",
			Display = "Consent Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of a witness to any other signature.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_8 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.8",
			Display = "Signature Witness Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of a witness to an event. (Example the witness has observed a procedure and is attesting to this fact.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_9 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.9",
			Display = "Event Witness Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual who has witnessed another individual who is known to them signing a document. (Example the identity witness is a notary public.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_10 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.10",
			Display = "Identity Witness Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual who has witnessed the health care provider counselling a patient.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_11 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.11",
			Display = "Consent Witness Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual who has translated health care information during an event or the obtaining of consent to a treatment.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_12 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.12",
			Display = "Interpreter Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of a person, device, or algorithm that has reviewed or filtered data for inclusion into the patient record. ( Examples: (1) a medical records clerk who scans a document for inclusion in the medical record, enters header information, or catalogues and classifies the data, or a combination thereof; (2) a gateway that receives data from another computer system and interprets that data or changes its format, or both, before entering it into the patient record.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_13 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.13",
			Display = "Review Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an automated data source. (Examples: (1) the signature for an image that is generated by a device for inclusion in the patient record; (2) the signature for an ECG derived by an ECG system for inclusion in the patient record; (3) the data from a biomedical monitoring device or system that is for inclusion in the patient record.)</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_14 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.14",
			Display = "Source Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature on a new amended document of an individual who has corrected, edited, or amended an original health information document. An addendum signature can either be a signature type or a signature sub-type (see 8.1). Any document with an addendum signature shall have a companion document that is the original document with its original, unaltered content, and original signatures. The original document shall be referenced via an attribute in the new document, which contains, for example, the digest of the old document. Whether the original, unaltered, document is always displayed with the addended document is a local matter, but the original, unaltered, document must remain as part of the patient record and be retrievable on demand.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_15 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.15",
			Display = "Addendum Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature on an original document of an individual who has generated a new amended document. This (original) document shall reference the new document via an additional signature purpose. This is the inverse of an addendum signature and provides a pointer from the original to the amended document.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_16 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.16",
			Display = "Modification Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature of an individual who is certifying that the document is invalidated by an error(s), or is placed in the wrong chart. An administrative (error/edit) signature must include an addendum to the document and therefore shall have an addendum signature sub-type (see 8.1). This signature is reserved for the highest health information system administrative classification, since it is a statement that the entire document is invalidated by the error and that the document should no longer be used for patient care, although for legal reasons the document must remain part of the permanent patient record.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_17 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.17",
			Display = "Administrative (Error/Edit) Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
		///<summary>the signature by an entity or device trusted to provide accurate timestamps. This timestamp might be provided, for example, in the signature time attribute.</summary>
		public static readonly Coding VAL_1_2_840_10065_1_12_1_18 = new Coding
		{
			Code = "1.2.840.10065.1.12.1.18",
			Display = "Timestamp Signature",
			System = "urn:iso-astm:E1762-95:2013"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/signature-type</summary>
	public abstract class SignatureTypeValues : SignatureTypeCodes { }
	///<summary>Code for a known / defined timing pattern.</summary>
	public abstract class TimingAbbreviation
	{
		///<summary>At bedtime (institution specified time).</summary>
		public static readonly Coding BED = new Coding
		{
			Code = "BED",
			Display = "at bedtime",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Two times a day at institution specified time</summary>
		public static readonly Coding BID = new Coding
		{
			Code = "BID",
			Display = "BID",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Regular business days (Monday to Friday excluding holidays)</summary>
		public static readonly Coding JB = new Coding
		{
			Code = "JB",
			Display = "JB",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Regular weekends (Saturday and Sunday excluding holidays)</summary>
		public static readonly Coding JE = new Coding
		{
			Code = "JE",
			Display = "JE",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Holidays</summary>
		public static readonly Coding JH = new Coding
		{
			Code = "JH",
			Display = "GTSAbbreviationHolidays",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Easter Sunday.  The Easter date is a rather complex calculation based on Astronomical tables describing full moon dates.  Details can be found at [http://www.assa.org.au/edm.html, and http://aa.usno.navy.mil/AA/faq/docs/easter.html].  Note that the Christian Orthodox Holidays are based on the Julian calendar.</summary>
		public static readonly Coding JHCHREAS = new Coding
		{
			Code = "JHCHREAS",
			Display = "JHCHREAS",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Good Friday, is the Friday right before Easter Sunday.</summary>
		public static readonly Coding JHCHRGFR = new Coding
		{
			Code = "JHCHRGFR",
			Display = "JHCHRGFR",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>New Year's Day (January 1)</summary>
		public static readonly Coding JHCHRNEW = new Coding
		{
			Code = "JHCHRNEW",
			Display = "JHCHRNEW",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Pentecost Sunday, is seven weeks after Easter (the 50th day of Easter).</summary>
		public static readonly Coding JHCHRPEN = new Coding
		{
			Code = "JHCHRPEN",
			Display = "JHCHRPEN",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Christmas Eve (December 24)</summary>
		public static readonly Coding JHCHRXME = new Coding
		{
			Code = "JHCHRXME",
			Display = "JHCHRXME",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Christmas Day (December 25)</summary>
		public static readonly Coding JHCHRXMS = new Coding
		{
			Code = "JHCHRXMS",
			Display = "JHCHRXMS",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Description:The Netherlands National Holidays.</summary>
		public static readonly Coding JHNNL = new Coding
		{
			Code = "JHNNL",
			Display = "The Netherlands National Holidays",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Description:Liberation day  (May 5 every five years)</summary>
		public static readonly Coding JHNNLLD = new Coding
		{
			Code = "JHNNLLD",
			Display = "Liberation day (May 5 every five years)",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Description:Queen's day (April 30)</summary>
		public static readonly Coding JHNNLQD = new Coding
		{
			Code = "JHNNLQD",
			Display = "Queen's day (April 30)",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Description:Sinterklaas (December 5)</summary>
		public static readonly Coding JHNNLSK = new Coding
		{
			Code = "JHNNLSK",
			Display = "Sinterklaas (December 5)",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>United States National Holidays (public holidays for federal employees established by U.S. Federal law 5 U.S.C. 6103).</summary>
		public static readonly Coding JHNUS = new Coding
		{
			Code = "JHNUS",
			Display = "GTSAbbreviationHolidaysUSNational",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Columbus Day, the second Monday in October.</summary>
		public static readonly Coding JHNUSCLM = new Coding
		{
			Code = "JHNUSCLM",
			Display = "JHNUSCLM",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Independence Day (4th of July)</summary>
		public static readonly Coding JHNUSIND = new Coding
		{
			Code = "JHNUSIND",
			Display = "JHNUSIND",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Alternative Monday after 4th of July Weekend [5 U.S.C. 6103(b)].</summary>
		public static readonly Coding JHNUSIND1 = new Coding
		{
			Code = "JHNUSIND1",
			Display = "JHNUSIND1",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Alternative Friday before 4th of July Weekend [5 U.S.C. 6103(b)].</summary>
		public static readonly Coding JHNUSIND5 = new Coding
		{
			Code = "JHNUSIND5",
			Display = "JHNUSIND5",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Labor Day, the first Monday in September.</summary>
		public static readonly Coding JHNUSLBR = new Coding
		{
			Code = "JHNUSLBR",
			Display = "JHNUSLBR",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Memorial Day, the last Monday in May.</summary>
		public static readonly Coding JHNUSMEM = new Coding
		{
			Code = "JHNUSMEM",
			Display = "JHNUSMEM",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Friday before Memorial Day Weekend</summary>
		public static readonly Coding JHNUSMEM5 = new Coding
		{
			Code = "JHNUSMEM5",
			Display = "JHNUSMEM5",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Saturday of Memorial Day Weekend</summary>
		public static readonly Coding JHNUSMEM6 = new Coding
		{
			Code = "JHNUSMEM6",
			Display = "JHNUSMEM6",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Dr. Martin Luther King, Jr. Day, the third Monday in January.</summary>
		public static readonly Coding JHNUSMLK = new Coding
		{
			Code = "JHNUSMLK",
			Display = "JHNUSMLK",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Washington's Birthday (Presidential Day) the third Monday in February.</summary>
		public static readonly Coding JHNUSPRE = new Coding
		{
			Code = "JHNUSPRE",
			Display = "JHNUSPRE",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Thanksgiving Day, the fourth Thursday in November.</summary>
		public static readonly Coding JHNUSTKS = new Coding
		{
			Code = "JHNUSTKS",
			Display = "JHNUSTKS",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Friday after Thanksgiving.</summary>
		public static readonly Coding JHNUSTKS5 = new Coding
		{
			Code = "JHNUSTKS5",
			Display = "JHNUSTKS5",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Veteran's Day, November 11.</summary>
		public static readonly Coding JHNUSVET = new Coding
		{
			Code = "JHNUSVET",
			Display = "JHNUSVET",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Monthly at institution specified time.</summary>
		public static readonly Coding MO = new Coding
		{
			Code = "MO",
			Display = "monthly",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every afternoon at institution specified times.</summary>
		public static readonly Coding PM = new Coding
		{
			Code = "PM",
			Display = "PM",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every hour at institution specified times.</summary>
		public static readonly Coding Q1H = new Coding
		{
			Code = "Q1H",
			Display = "every hour",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every 2 hours at institution specified times.</summary>
		public static readonly Coding Q2H = new Coding
		{
			Code = "Q2H",
			Display = "every 2 hours",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every 3 hours at institution specified times.</summary>
		public static readonly Coding Q3H = new Coding
		{
			Code = "Q3H",
			Display = "every 3 hours",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every 4 hours at institution specified time</summary>
		public static readonly Coding Q4H = new Coding
		{
			Code = "Q4H",
			Display = "Q4H",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every 6 hours at institution specified time</summary>
		public static readonly Coding Q6H = new Coding
		{
			Code = "Q6H",
			Display = "Q6H",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every 8 hours at institution specified times.</summary>
		public static readonly Coding Q8H = new Coding
		{
			Code = "Q8H",
			Display = "every 8 hours",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every day at institution specified times.</summary>
		public static readonly Coding QD = new Coding
		{
			Code = "QD",
			Display = "QD",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Four times a day at institution specified time</summary>
		public static readonly Coding QID = new Coding
		{
			Code = "QID",
			Display = "QID",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Every other day at institution specified times.</summary>
		public static readonly Coding QOD = new Coding
		{
			Code = "QOD",
			Display = "QOD",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Three times a day at institution specified time</summary>
		public static readonly Coding TID = new Coding
		{
			Code = "TID",
			Display = "TID",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
		///<summary>Weekly at institution specified time.</summary>
		public static readonly Coding WK = new Coding
		{
			Code = "WK",
			Display = "weekly",
			System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/timing-abbreviation</summary>
	public abstract class TimingCodeValues : TimingAbbreviation { }
	///<summary>A code that specifies a type of context being specified by a usage context.</summary>
	public abstract class UsageContextType
	{
		///<summary>The gender of the patient. For this context type, appropriate values can be found in the http://hl7.org/fhir/ValueSet/administrative-gender value set.</summary>
		public static readonly Coding gender = new Coding
		{
			Code = "gender",
			Display = "Gender",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The age of the patient. For this context type, the value could be a range that specifies the applicable ages or a code from an appropriate value set such as the MeSH value set http://terminology.hl7.org/ValueSet/v3-AgeGroupObservationValue.</summary>
		public static readonly Coding age = new Coding
		{
			Code = "age",
			Display = "Age Range",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The clinical concept(s) addressed by the artifact. For example, disease, diagnostic test interpretation, medication ordering as in http://hl7.org/fhir/ValueSet/condition-code.</summary>
		public static readonly Coding focus = new Coding
		{
			Code = "focus",
			Display = "Clinical Focus",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The clinical specialty of the context in which the patient is being treated - For example, PCP, Patient, Cardiologist, Behavioral Professional, Oral Health Professional, Prescriber, etc... taken from a specialty value set such as the NUCC Health Care provider taxonomy value set http://hl7.org/fhir/ValueSet/provider-taxonomy.</summary>
		public static readonly Coding user = new Coding
		{
			Code = "user",
			Display = "User Type",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The settings in which the artifact is intended for use. For example, admission, pre-op, etc. For example, the ActEncounterCode value set http://terminology.hl7.org/ValueSet/v3-ActEncounterCode.</summary>
		public static readonly Coding workflow = new Coding
		{
			Code = "workflow",
			Display = "Workflow Setting",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The context for the clinical task(s) represented by this artifact. For example, this could be any task context represented by the HL7 ActTaskCode value set http://terminology.hl7.org/ValueSet/v3-ActTaskCode. General categories include: order entry, patient documentation and patient information review.</summary>
		public static readonly Coding task = new Coding
		{
			Code = "task",
			Display = "Workflow Task",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The venue in which an artifact could be used. For example, Outpatient, Inpatient, Home, Nursing home. The code value may originate from the HL7 ServiceDeliveryLocationRoleType value set (http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType).</summary>
		public static readonly Coding venue = new Coding
		{
			Code = "venue",
			Display = "Clinical Venue",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>The species to which an artifact applies. For example, SNOMED - 387961004 | Kingdom Animalia (organism).</summary>
		public static readonly Coding species = new Coding
		{
			Code = "species",
			Display = "Species",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
		///<summary>A program/project of work for which this artifact is applicable.</summary>
		public static readonly Coding program = new Coding
		{
			Code = "program",
			Display = "Program",
			System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
		};
	};
	///<summary>ValueSet alias for http://hl7.org/fhir/ValueSet/usage-context-type</summary>
	public abstract class UsageContextCodeValues : UsageContextType { }
	///<summary>
	///Base StructureDefinition for Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
	///</summary>
	///<source-file>c:\git\fhir\publish\address.profile.canonical.json</source-file>
	public class Address : Element
	{
		///<summary>The name of the city, town, suburb, village or other community or delivery center.</summary>
		[JsonProperty(PropertyName = "city")]
		public string City { get; set; }
		///<summary>May contain extended information for property: 'City'</summary>
		[JsonProperty(PropertyName = "_city")]
		public Element _City { get; set; }
		///<summary>Country - a nation as commonly understood or generally accepted.</summary>
		[JsonProperty(PropertyName = "country")]
		public string Country { get; set; }
		///<summary>May contain extended information for property: 'Country'</summary>
		[JsonProperty(PropertyName = "_country")]
		public Element _Country { get; set; }
		///<summary>The name of the administrative area (county).</summary>
		[JsonProperty(PropertyName = "district")]
		public string District { get; set; }
		///<summary>May contain extended information for property: 'District'</summary>
		[JsonProperty(PropertyName = "_district")]
		public Element _District { get; set; }
		///<summary>This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.</summary>
		[JsonProperty(PropertyName = "line")]
		public string[] Line { get; set; }
		///<summary>May contain extended information for property: 'Line'</summary>
		[JsonProperty(PropertyName = "_line")]
		public Element[] _Line { get; set; }
		///<summary>Time period when address was/is in use.</summary>
		[JsonProperty(PropertyName = "period")]
		public Period Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>A postal code designating a region defined by the postal service.</summary>
		[JsonProperty(PropertyName = "postalCode")]
		public string PostalCode { get; set; }
		///<summary>May contain extended information for property: 'PostalCode'</summary>
		[JsonProperty(PropertyName = "_postalCode")]
		public Element _PostalCode { get; set; }
		///<summary>Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).</summary>
		[JsonProperty(PropertyName = "state")]
		public string State { get; set; }
		///<summary>May contain extended information for property: 'State'</summary>
		[JsonProperty(PropertyName = "_state")]
		public Element _State { get; set; }
		///<summary>Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.</summary>
		[JsonProperty(PropertyName = "text")]
		public string Text { get; set; }
		///<summary>May contain extended information for property: 'Text'</summary>
		[JsonProperty(PropertyName = "_text")]
		public Element _Text { get; set; }
		///<summary>The definition of Address states that "address is intended to describe postal addresses, not physical locations". However, many applications track whether an address has a dual purpose of being a location that can be visited as well as being a valid delivery destination, and Postal addresses are often used as proxies for physical locations (also see the [Location](location.html#) resource).</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>Applications can assume that an address is current unless it explicitly says that it is temporary or old.</summary>
		[JsonProperty(PropertyName = "use")]
		public string Use { get; set; }
		///<summary>May contain extended information for property: 'Use'</summary>
		[JsonProperty(PropertyName = "_use")]
		public Element _Use { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Age Type: A duration of time during which an organism (or a process) has existed.
	///</summary>
	///<source-file>c:\git\fhir\publish\age.profile.canonical.json</source-file>
	public class Age : Quantity
	{
	}
	///<summary>
	///Base StructureDefinition for Annotation Type: A  text note which also  contains information about who made the statement and when.
	///</summary>
	///<source-file>c:\git\fhir\publish\annotation.profile.canonical.json</source-file>
	public class Annotation : Element
	{
		///<summary>The individual responsible for making the annotation.</summary>
		[JsonProperty(PropertyName = "authorReference")]
		public Reference AuthorReference { get; set; }
		///<summary>May contain extended information for property: 'AuthorReference'</summary>
		[JsonProperty(PropertyName = "_authorReference")]
		public Element _AuthorReference { get; set; }
		///<summary>The individual responsible for making the annotation.</summary>
		[JsonProperty(PropertyName = "authorString")]
		public string AuthorString { get; set; }
		///<summary>May contain extended information for property: 'AuthorString'</summary>
		[JsonProperty(PropertyName = "_authorString")]
		public Element _AuthorString { get; set; }
		///<summary>The text of the annotation in markdown format.</summary>
		[JsonProperty(PropertyName = "text")]
		public string Text { get; set; }
		///<summary>May contain extended information for property: 'Text'</summary>
		[JsonProperty(PropertyName = "_text")]
		public Element _Text { get; set; }
		///<summary>Indicates when this particular annotation was made.</summary>
		[JsonProperty(PropertyName = "time")]
		public string Time { get; set; }
		///<summary>May contain extended information for property: 'Time'</summary>
		[JsonProperty(PropertyName = "_time")]
		public Element _Time { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Attachment Type: For referring to data content defined in other formats.
	///</summary>
	///<source-file>c:\git\fhir\publish\attachment.profile.canonical.json</source-file>
	public class Attachment : Element
	{
		///<summary>Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.</summary>
		[JsonProperty(PropertyName = "contentType")]
		public string ContentType { get; set; }
		///<summary>May contain extended information for property: 'ContentType'</summary>
		[JsonProperty(PropertyName = "_contentType")]
		public Element _ContentType { get; set; }
		///<summary>The date that the attachment was first created.</summary>
		[JsonProperty(PropertyName = "creation")]
		public string Creation { get; set; }
		///<summary>May contain extended information for property: 'Creation'</summary>
		[JsonProperty(PropertyName = "_creation")]
		public Element _Creation { get; set; }
		///<summary>The actual data of the attachment - a sequence of bytes, base64 encoded.</summary>
		[JsonProperty(PropertyName = "data")]
		public string Data { get; set; }
		///<summary>May contain extended information for property: 'Data'</summary>
		[JsonProperty(PropertyName = "_data")]
		public Element _Data { get; set; }
		///<summary>The calculated hash of the data using SHA-1. Represented using base64.</summary>
		[JsonProperty(PropertyName = "hash")]
		public string Hash { get; set; }
		///<summary>May contain extended information for property: 'Hash'</summary>
		[JsonProperty(PropertyName = "_hash")]
		public Element _Hash { get; set; }
		///<summary>The human language of the content. The value can be any valid value according to BCP 47.</summary>
		[JsonProperty(PropertyName = "language")]
		public string Language { get; set; }
		///<summary>May contain extended information for property: 'Language'</summary>
		[JsonProperty(PropertyName = "_language")]
		public Element _Language { get; set; }
		///<summary>The number of bytes of data that make up this attachment (before base64 encoding, if that is done).</summary>
		[JsonProperty(PropertyName = "size")]
		public uint? Size { get; set; }
		///<summary>May contain extended information for property: 'Size'</summary>
		[JsonProperty(PropertyName = "_size")]
		public Element _Size { get; set; }
		///<summary>A label or set of text to display in place of the data.</summary>
		[JsonProperty(PropertyName = "title")]
		public string Title { get; set; }
		///<summary>May contain extended information for property: 'Title'</summary>
		[JsonProperty(PropertyName = "_title")]
		public Element _Title { get; set; }
		///<summary>A location where the data can be accessed.</summary>
		[JsonProperty(PropertyName = "url")]
		public string Url { get; set; }
		///<summary>May contain extended information for property: 'Url'</summary>
		[JsonProperty(PropertyName = "_url")]
		public Element _Url { get; set; }
	}
	///<summary>
	///Base StructureDefinition for BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type.
	///</summary>
	///<source-file>c:\git\fhir\publish\backboneelement.profile.canonical.json</source-file>
	public class BackboneElement : Element
	{
		///<summary>May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
		/// 
		/// Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).</summary>
		[JsonProperty(PropertyName = "modifierExtension")]
		public Extension[] ModifierExtension { get; set; }
		///<summary>May contain extended information for property: 'ModifierExtension'</summary>
		[JsonProperty(PropertyName = "_modifierExtension")]
		public Element[] _ModifierExtension { get; set; }
	}
	///<summary>
	///Base StructureDefinition for CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
	///</summary>
	///<source-file>c:\git\fhir\publish\codeableconcept.profile.canonical.json</source-file>
	public class CodeableConcept : Element
	{
		///<summary>A reference to a code defined by a terminology system.</summary>
		[JsonProperty(PropertyName = "coding")]
		public Coding[] Coding { get; set; }
		///<summary>May contain extended information for property: 'Coding'</summary>
		[JsonProperty(PropertyName = "_coding")]
		public Element[] _Coding { get; set; }
		///<summary>A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.</summary>
		[JsonProperty(PropertyName = "text")]
		public string Text { get; set; }
		///<summary>May contain extended information for property: 'Text'</summary>
		[JsonProperty(PropertyName = "_text")]
		public Element _Text { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Coding Type: A reference to a code defined by a terminology system.
	///</summary>
	///<source-file>c:\git\fhir\publish\coding.profile.canonical.json</source-file>
	public class Coding : Element
	{
		///<summary>A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).</summary>
		[JsonProperty(PropertyName = "code")]
		public string Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element _Code { get; set; }
		///<summary>A representation of the meaning of the code in the system, following the rules of the system.</summary>
		[JsonProperty(PropertyName = "display")]
		public string Display { get; set; }
		///<summary>May contain extended information for property: 'Display'</summary>
		[JsonProperty(PropertyName = "_display")]
		public Element _Display { get; set; }
		///<summary>The identification of the code system that defines the meaning of the symbol in the code.</summary>
		[JsonProperty(PropertyName = "system")]
		public string System { get; set; }
		///<summary>May contain extended information for property: 'System'</summary>
		[JsonProperty(PropertyName = "_system")]
		public Element _System { get; set; }
		///<summary>Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).</summary>
		[JsonProperty(PropertyName = "userSelected")]
		public bool? UserSelected { get; set; }
		///<summary>May contain extended information for property: 'UserSelected'</summary>
		[JsonProperty(PropertyName = "_userSelected")]
		public Element _UserSelected { get; set; }
		///<summary>The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.</summary>
		[JsonProperty(PropertyName = "version")]
		public string Version { get; set; }
		///<summary>May contain extended information for property: 'Version'</summary>
		[JsonProperty(PropertyName = "_version")]
		public Element _Version { get; set; }
	}
	///<summary>
	///Base StructureDefinition for ContactDetail Type: Specifies contact information for a person or organization.
	///</summary>
	///<source-file>c:\git\fhir\publish\contactdetail.profile.canonical.json</source-file>
	public class ContactDetail : Element
	{
		///<summary>The name of an individual to contact.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>The contact details for the individual (if a name was provided) or the organization.</summary>
		[JsonProperty(PropertyName = "telecom")]
		public ContactPoint[] Telecom { get; set; }
		///<summary>May contain extended information for property: 'Telecom'</summary>
		[JsonProperty(PropertyName = "_telecom")]
		public Element[] _Telecom { get; set; }
	}
	///<summary>
	///Base StructureDefinition for ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
	///</summary>
	///<source-file>c:\git\fhir\publish\contactpoint.profile.canonical.json</source-file>
	public class ContactPoint : Element
	{
		///<summary>Time period when the contact point was/is in use.</summary>
		[JsonProperty(PropertyName = "period")]
		public Period Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.</summary>
		[JsonProperty(PropertyName = "rank")]
		public uint? Rank { get; set; }
		///<summary>May contain extended information for property: 'Rank'</summary>
		[JsonProperty(PropertyName = "_rank")]
		public Element _Rank { get; set; }
		///<summary>Telecommunications form for contact point - what communications system is required to make use of the contact.</summary>
		[JsonProperty(PropertyName = "system")]
		public string System { get; set; }
		///<summary>May contain extended information for property: 'System'</summary>
		[JsonProperty(PropertyName = "_system")]
		public Element _System { get; set; }
		///<summary>Applications can assume that a contact is current unless it explicitly says that it is temporary or old.</summary>
		[JsonProperty(PropertyName = "use")]
		public string Use { get; set; }
		///<summary>May contain extended information for property: 'Use'</summary>
		[JsonProperty(PropertyName = "_use")]
		public Element _Use { get; set; }
		///<summary>The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).</summary>
		[JsonProperty(PropertyName = "value")]
		public string Value { get; set; }
		///<summary>May contain extended information for property: 'Value'</summary>
		[JsonProperty(PropertyName = "_value")]
		public Element _Value { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Contributor Type: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.
	///</summary>
	///<source-file>c:\git\fhir\publish\contributor.profile.canonical.json</source-file>
	public class Contributor : Element
	{
		///<summary>Contact details to assist a user in finding and communicating with the contributor.</summary>
		[JsonProperty(PropertyName = "contact")]
		public ContactDetail[] Contact { get; set; }
		///<summary>May contain extended information for property: 'Contact'</summary>
		[JsonProperty(PropertyName = "_contact")]
		public Element[] _Contact { get; set; }
		///<summary>The name of the individual or organization responsible for the contribution.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>The type of contributor.</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Count Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
	///</summary>
	///<source-file>c:\git\fhir\publish\count.profile.canonical.json</source-file>
	public class Count : Quantity
	{
	}
	///<summary>
	///Base StructureDefinition for DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
	///</summary>
	///<source-file>c:\git\fhir\publish\datarequirement.profile.canonical.json</source-file>
	public class DataRequirement : Element
	{
		///<summary>Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.</summary>
		[JsonProperty(PropertyName = "codeFilter")]
		public DataRequirementCodeFilter[] CodeFilter { get; set; }
		///<summary>May contain extended information for property: 'CodeFilter'</summary>
		[JsonProperty(PropertyName = "_codeFilter")]
		public Element[] _CodeFilter { get; set; }
		///<summary>Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.</summary>
		[JsonProperty(PropertyName = "dateFilter")]
		public DataRequirementDateFilter[] DateFilter { get; set; }
		///<summary>May contain extended information for property: 'DateFilter'</summary>
		[JsonProperty(PropertyName = "_dateFilter")]
		public Element[] _DateFilter { get; set; }
		///<summary>Specifies a maximum number of results that are required (uses the _count search parameter).</summary>
		[JsonProperty(PropertyName = "limit")]
		public uint? Limit { get; set; }
		///<summary>May contain extended information for property: 'Limit'</summary>
		[JsonProperty(PropertyName = "_limit")]
		public Element _Limit { get; set; }
		///<summary>Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. 
		/// 
		/// The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).</summary>
		[JsonProperty(PropertyName = "mustSupport")]
		public string[] MustSupport { get; set; }
		///<summary>May contain extended information for property: 'MustSupport'</summary>
		[JsonProperty(PropertyName = "_mustSupport")]
		public Element[] _MustSupport { get; set; }
		///<summary>The profile of the required data, specified as the uri of the profile definition.</summary>
		[JsonProperty(PropertyName = "profile")]
		public string[] Profile { get; set; }
		///<summary>May contain extended information for property: 'Profile'</summary>
		[JsonProperty(PropertyName = "_profile")]
		public Element[] _Profile { get; set; }
		///<summary>Specifies the order of the results to be returned.</summary>
		[JsonProperty(PropertyName = "sort")]
		public DataRequirementSort[] Sort { get; set; }
		///<summary>May contain extended information for property: 'Sort'</summary>
		[JsonProperty(PropertyName = "_sort")]
		public Element[] _Sort { get; set; }
		///<summary>The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.</summary>
		[JsonProperty(PropertyName = "subjectCodeableConcept")]
		public CodeableConcept SubjectCodeableConcept { get; set; }
		///<summary>May contain extended information for property: 'SubjectCodeableConcept'</summary>
		[JsonProperty(PropertyName = "_subjectCodeableConcept")]
		public Element _SubjectCodeableConcept { get; set; }
		///<summary>The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.</summary>
		[JsonProperty(PropertyName = "subjectReference")]
		public Reference SubjectReference { get; set; }
		///<summary>May contain extended information for property: 'SubjectReference'</summary>
		[JsonProperty(PropertyName = "_subjectReference")]
		public Element _SubjectReference { get; set; }
		///<summary>The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
	///</summary>
	///<source-file>c:\git\fhir\publish\datarequirement.profile.canonical.json</source-file>
	public class DataRequirementCodeFilter : Element
	{
		///<summary>The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.</summary>
		[JsonProperty(PropertyName = "code")]
		public Coding[] Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element[] _Code { get; set; }
		///<summary>The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.</summary>
		[JsonProperty(PropertyName = "path")]
		public string Path { get; set; }
		///<summary>May contain extended information for property: 'Path'</summary>
		[JsonProperty(PropertyName = "_path")]
		public Element _Path { get; set; }
		///<summary>A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.</summary>
		[JsonProperty(PropertyName = "searchParam")]
		public string SearchParam { get; set; }
		///<summary>May contain extended information for property: 'SearchParam'</summary>
		[JsonProperty(PropertyName = "_searchParam")]
		public Element _SearchParam { get; set; }
		///<summary>The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.</summary>
		[JsonProperty(PropertyName = "valueSet")]
		public string ValueSet { get; set; }
		///<summary>May contain extended information for property: 'ValueSet'</summary>
		[JsonProperty(PropertyName = "_valueSet")]
		public Element _ValueSet { get; set; }
	}
	///<summary>
	///Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
	///</summary>
	///<source-file>c:\git\fhir\publish\datarequirement.profile.canonical.json</source-file>
	public class DataRequirementDateFilter : Element
	{
		///<summary>The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.</summary>
		[JsonProperty(PropertyName = "path")]
		public string Path { get; set; }
		///<summary>May contain extended information for property: 'Path'</summary>
		[JsonProperty(PropertyName = "_path")]
		public Element _Path { get; set; }
		///<summary>A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.</summary>
		[JsonProperty(PropertyName = "searchParam")]
		public string SearchParam { get; set; }
		///<summary>May contain extended information for property: 'SearchParam'</summary>
		[JsonProperty(PropertyName = "_searchParam")]
		public Element _SearchParam { get; set; }
		///<summary>The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.</summary>
		[JsonProperty(PropertyName = "valueDateTime")]
		public string ValueDateTime { get; set; }
		///<summary>May contain extended information for property: 'ValueDateTime'</summary>
		[JsonProperty(PropertyName = "_valueDateTime")]
		public Element _ValueDateTime { get; set; }
		///<summary>The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.</summary>
		[JsonProperty(PropertyName = "valueDuration")]
		public Duration ValueDuration { get; set; }
		///<summary>May contain extended information for property: 'ValueDuration'</summary>
		[JsonProperty(PropertyName = "_valueDuration")]
		public Element _ValueDuration { get; set; }
		///<summary>The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.</summary>
		[JsonProperty(PropertyName = "valuePeriod")]
		public Period ValuePeriod { get; set; }
		///<summary>May contain extended information for property: 'ValuePeriod'</summary>
		[JsonProperty(PropertyName = "_valuePeriod")]
		public Element _ValuePeriod { get; set; }
	}
	///<summary>
	///Specifies the order of the results to be returned.
	///</summary>
	///<source-file>c:\git\fhir\publish\datarequirement.profile.canonical.json</source-file>
	public class DataRequirementSort : Element
	{
		///<summary>The direction of the sort, ascending or descending.</summary>
		[JsonProperty(PropertyName = "direction")]
		public string Direction { get; set; }
		///<summary>May contain extended information for property: 'Direction'</summary>
		[JsonProperty(PropertyName = "_direction")]
		public Element _Direction { get; set; }
		///<summary>The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.</summary>
		[JsonProperty(PropertyName = "path")]
		public string Path { get; set; }
		///<summary>May contain extended information for property: 'Path'</summary>
		[JsonProperty(PropertyName = "_path")]
		public Element _Path { get; set; }
	}
	///<summary>
	///Base StructureDefinition for decimal Type: A rational number with implicit precision
	///</summary>
	///<source-file>c:\git\fhir\publish\decimal.profile.canonical.json</source-file>
	public class Decimal : Element
	{
	}
	///<summary>
	///A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.
	///</summary>
	///<source-file>c:\git\fhir\publish\device.profile.canonical.json</source-file>
	public class Device : DomainResource
	{
		///<summary>Resource Type Name (for serialization)</summary>
		[JsonProperty(PropertyName = "resourceType")]
		public string ResourceType => "Device";
		///<summary>Contact details for an organization or a particular human that is responsible for the device.</summary>
		[JsonProperty(PropertyName = "contact")]
		public ContactPoint[] Contact { get; set; }
		///<summary>May contain extended information for property: 'Contact'</summary>
		[JsonProperty(PropertyName = "_contact")]
		public Element[] _Contact { get; set; }
		///<summary>The reference to the definition for the device.</summary>
		[JsonProperty(PropertyName = "definition")]
		public Reference Definition { get; set; }
		///<summary>May contain extended information for property: 'Definition'</summary>
		[JsonProperty(PropertyName = "_definition")]
		public Element _Definition { get; set; }
		///<summary>This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.</summary>
		[JsonProperty(PropertyName = "deviceName")]
		public DeviceDeviceName[] DeviceName { get; set; }
		///<summary>May contain extended information for property: 'DeviceName'</summary>
		[JsonProperty(PropertyName = "_deviceName")]
		public Element[] _DeviceName { get; set; }
		///<summary>The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product.</summary>
		[JsonProperty(PropertyName = "distinctIdentifier")]
		public string DistinctIdentifier { get; set; }
		///<summary>May contain extended information for property: 'DistinctIdentifier'</summary>
		[JsonProperty(PropertyName = "_distinctIdentifier")]
		public Element _DistinctIdentifier { get; set; }
		///<summary>The date and time beyond which this device is no longer valid or should not be used (if applicable).</summary>
		[JsonProperty(PropertyName = "expirationDate")]
		public string ExpirationDate { get; set; }
		///<summary>May contain extended information for property: 'ExpirationDate'</summary>
		[JsonProperty(PropertyName = "_expirationDate")]
		public Element _ExpirationDate { get; set; }
		///<summary>Unique instance identifiers assigned to a device by manufacturers other organizations or owners.</summary>
		[JsonProperty(PropertyName = "identifier")]
		public Identifier[] Identifier { get; set; }
		///<summary>May contain extended information for property: 'Identifier'</summary>
		[JsonProperty(PropertyName = "_identifier")]
		public Element[] _Identifier { get; set; }
		///<summary>The place where the device can be found.</summary>
		[JsonProperty(PropertyName = "location")]
		public Reference Location { get; set; }
		///<summary>May contain extended information for property: 'Location'</summary>
		[JsonProperty(PropertyName = "_location")]
		public Element _Location { get; set; }
		///<summary>Lot number assigned by the manufacturer.</summary>
		[JsonProperty(PropertyName = "lotNumber")]
		public string LotNumber { get; set; }
		///<summary>May contain extended information for property: 'LotNumber'</summary>
		[JsonProperty(PropertyName = "_lotNumber")]
		public Element _LotNumber { get; set; }
		///<summary>The date and time when the device was manufactured.</summary>
		[JsonProperty(PropertyName = "manufactureDate")]
		public string ManufactureDate { get; set; }
		///<summary>May contain extended information for property: 'ManufactureDate'</summary>
		[JsonProperty(PropertyName = "_manufactureDate")]
		public Element _ManufactureDate { get; set; }
		///<summary>A name of the manufacturer.</summary>
		[JsonProperty(PropertyName = "manufacturer")]
		public string Manufacturer { get; set; }
		///<summary>May contain extended information for property: 'Manufacturer'</summary>
		[JsonProperty(PropertyName = "_manufacturer")]
		public Element _Manufacturer { get; set; }
		///<summary>The manufacturer's model number for the device.</summary>
		[JsonProperty(PropertyName = "modelNumber")]
		public string ModelNumber { get; set; }
		///<summary>May contain extended information for property: 'ModelNumber'</summary>
		[JsonProperty(PropertyName = "_modelNumber")]
		public Element _ModelNumber { get; set; }
		///<summary>Descriptive information, usage information or implantation information that is not captured in an existing element.</summary>
		[JsonProperty(PropertyName = "note")]
		public Annotation[] Note { get; set; }
		///<summary>May contain extended information for property: 'Note'</summary>
		[JsonProperty(PropertyName = "_note")]
		public Element[] _Note { get; set; }
		///<summary>An organization that is responsible for the provision and ongoing maintenance of the device.</summary>
		[JsonProperty(PropertyName = "owner")]
		public Reference Owner { get; set; }
		///<summary>May contain extended information for property: 'Owner'</summary>
		[JsonProperty(PropertyName = "_owner")]
		public Element _Owner { get; set; }
		///<summary>The device that this device is attached to or is part of.</summary>
		[JsonProperty(PropertyName = "parent")]
		public Reference Parent { get; set; }
		///<summary>May contain extended information for property: 'Parent'</summary>
		[JsonProperty(PropertyName = "_parent")]
		public Element _Parent { get; set; }
		///<summary>The part number or catalog number of the device.</summary>
		[JsonProperty(PropertyName = "partNumber")]
		public string PartNumber { get; set; }
		///<summary>May contain extended information for property: 'PartNumber'</summary>
		[JsonProperty(PropertyName = "_partNumber")]
		public Element _PartNumber { get; set; }
		///<summary>Patient information, If the device is affixed to a person.</summary>
		[JsonProperty(PropertyName = "patient")]
		public Reference Patient { get; set; }
		///<summary>May contain extended information for property: 'Patient'</summary>
		[JsonProperty(PropertyName = "_patient")]
		public Element _Patient { get; set; }
		///<summary>The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.</summary>
		[JsonProperty(PropertyName = "property")]
		public DeviceProperty[] Property { get; set; }
		///<summary>May contain extended information for property: 'Property'</summary>
		[JsonProperty(PropertyName = "_property")]
		public Element[] _Property { get; set; }
		///<summary>Provides additional safety characteristics about a medical device.  For example devices containing latex.</summary>
		[JsonProperty(PropertyName = "safety")]
		public CodeableConcept[] Safety { get; set; }
		///<summary>May contain extended information for property: 'Safety'</summary>
		[JsonProperty(PropertyName = "_safety")]
		public Element[] _Safety { get; set; }
		///<summary>The serial number assigned by the organization when the device was manufactured.</summary>
		[JsonProperty(PropertyName = "serialNumber")]
		public string SerialNumber { get; set; }
		///<summary>May contain extended information for property: 'SerialNumber'</summary>
		[JsonProperty(PropertyName = "_serialNumber")]
		public Element _SerialNumber { get; set; }
		///<summary>The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.</summary>
		[JsonProperty(PropertyName = "specialization")]
		public DeviceSpecialization[] Specialization { get; set; }
		///<summary>May contain extended information for property: 'Specialization'</summary>
		[JsonProperty(PropertyName = "_specialization")]
		public Element[] _Specialization { get; set; }
		///<summary>This element is labeled as a modifier because the status contains the codes inactive and entered-in-error that mark the device (record)as not currently valid.</summary>
		[JsonProperty(PropertyName = "status")]
		public string Status { get; set; }
		///<summary>May contain extended information for property: 'Status'</summary>
		[JsonProperty(PropertyName = "_status")]
		public Element _Status { get; set; }
		///<summary>Reason for the dtatus of the Device availability.</summary>
		[JsonProperty(PropertyName = "statusReason")]
		public CodeableConcept[] StatusReason { get; set; }
		///<summary>May contain extended information for property: 'StatusReason'</summary>
		[JsonProperty(PropertyName = "_statusReason")]
		public Element[] _StatusReason { get; set; }
		///<summary>The kind or type of device.</summary>
		[JsonProperty(PropertyName = "type")]
		public CodeableConcept Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.</summary>
		[JsonProperty(PropertyName = "udiCarrier")]
		public DeviceUdiCarrier[] UdiCarrier { get; set; }
		///<summary>May contain extended information for property: 'UdiCarrier'</summary>
		[JsonProperty(PropertyName = "_udiCarrier")]
		public Element[] _UdiCarrier { get; set; }
		///<summary>A network address on which the device may be contacted directly.</summary>
		[JsonProperty(PropertyName = "url")]
		public string Url { get; set; }
		///<summary>May contain extended information for property: 'Url'</summary>
		[JsonProperty(PropertyName = "_url")]
		public Element _Url { get; set; }
		///<summary>The actual design of the device or software version running on the device.</summary>
		[JsonProperty(PropertyName = "version")]
		public DeviceVersion[] Version { get; set; }
		///<summary>May contain extended information for property: 'Version'</summary>
		[JsonProperty(PropertyName = "_version")]
		public Element[] _Version { get; set; }
	}
	///<summary>
	///This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.
	///</summary>
	///<source-file>c:\git\fhir\publish\device.profile.canonical.json</source-file>
	public class DeviceDeviceName : Element
	{
		///<summary>The name that identifies the device.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>The type of deviceName.
		/// UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.
	///</summary>
	///<source-file>c:\git\fhir\publish\device.profile.canonical.json</source-file>
	public class DeviceProperty : Element
	{
		///<summary>Code that specifies the property DeviceDefinitionPropetyCode (Extensible).</summary>
		[JsonProperty(PropertyName = "type")]
		public CodeableConcept Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>Property value as a code, e.g., NTP4 (synced to NTP).</summary>
		[JsonProperty(PropertyName = "valueCode")]
		public CodeableConcept[] ValueCode { get; set; }
		///<summary>May contain extended information for property: 'ValueCode'</summary>
		[JsonProperty(PropertyName = "_valueCode")]
		public Element[] _ValueCode { get; set; }
		///<summary>Property value as a quantity.</summary>
		[JsonProperty(PropertyName = "valueQuantity")]
		public Quantity[] ValueQuantity { get; set; }
		///<summary>May contain extended information for property: 'ValueQuantity'</summary>
		[JsonProperty(PropertyName = "_valueQuantity")]
		public Element[] _ValueQuantity { get; set; }
	}
	///<summary>
	///The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.
	///</summary>
	///<source-file>c:\git\fhir\publish\device.profile.canonical.json</source-file>
	public class DeviceSpecialization : Element
	{
		///<summary>The standard that is used to operate and communicate.</summary>
		[JsonProperty(PropertyName = "systemType")]
		public CodeableConcept SystemType { get; set; }
		///<summary>May contain extended information for property: 'SystemType'</summary>
		[JsonProperty(PropertyName = "_systemType")]
		public Element _SystemType { get; set; }
		///<summary>The version of the standard that is used to operate and communicate.</summary>
		[JsonProperty(PropertyName = "version")]
		public string Version { get; set; }
		///<summary>May contain extended information for property: 'Version'</summary>
		[JsonProperty(PropertyName = "_version")]
		public Element _Version { get; set; }
	}
	///<summary>
	///Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.
	///</summary>
	///<source-file>c:\git\fhir\publish\device.profile.canonical.json</source-file>
	public class DeviceUdiCarrier : Element
	{
		///<summary>The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.</summary>
		[JsonProperty(PropertyName = "carrierAIDC")]
		public string CarrierAIDC { get; set; }
		///<summary>May contain extended information for property: 'CarrierAIDC'</summary>
		[JsonProperty(PropertyName = "_carrierAIDC")]
		public Element _CarrierAIDC { get; set; }
		///<summary>The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.</summary>
		[JsonProperty(PropertyName = "carrierHRF")]
		public string CarrierHRF { get; set; }
		///<summary>May contain extended information for property: 'CarrierHRF'</summary>
		[JsonProperty(PropertyName = "_carrierHRF")]
		public Element _CarrierHRF { get; set; }
		///<summary>The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.</summary>
		[JsonProperty(PropertyName = "deviceIdentifier")]
		public string DeviceIdentifier { get; set; }
		///<summary>May contain extended information for property: 'DeviceIdentifier'</summary>
		[JsonProperty(PropertyName = "_deviceIdentifier")]
		public Element _DeviceIdentifier { get; set; }
		///<summary>A coded entry to indicate how the data was entered.</summary>
		[JsonProperty(PropertyName = "entryType")]
		public string EntryType { get; set; }
		///<summary>May contain extended information for property: 'EntryType'</summary>
		[JsonProperty(PropertyName = "_entryType")]
		public Element _EntryType { get; set; }
		///<summary>Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :
		/// 1) GS1: 
		/// http://hl7.org/fhir/NamingSystem/gs1-di, 
		/// 2) HIBCC:
		/// http://hl7.org/fhir/NamingSystem/hibcc-dI, 
		/// 3) ICCBBA for blood containers:
		/// http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 
		/// 4) ICCBA for other devices:
		/// http://hl7.org/fhir/NamingSystem/iccbba-other-di.</summary>
		[JsonProperty(PropertyName = "issuer")]
		public string Issuer { get; set; }
		///<summary>May contain extended information for property: 'Issuer'</summary>
		[JsonProperty(PropertyName = "_issuer")]
		public Element _Issuer { get; set; }
		///<summary>The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi.</summary>
		[JsonProperty(PropertyName = "jurisdiction")]
		public string Jurisdiction { get; set; }
		///<summary>May contain extended information for property: 'Jurisdiction'</summary>
		[JsonProperty(PropertyName = "_jurisdiction")]
		public Element _Jurisdiction { get; set; }
	}
	///<summary>
	///The actual design of the device or software version running on the device.
	///</summary>
	///<source-file>c:\git\fhir\publish\device.profile.canonical.json</source-file>
	public class DeviceVersion : Element
	{
		///<summary>A single component of the device version.</summary>
		[JsonProperty(PropertyName = "component")]
		public Identifier Component { get; set; }
		///<summary>May contain extended information for property: 'Component'</summary>
		[JsonProperty(PropertyName = "_component")]
		public Element _Component { get; set; }
		///<summary>The type of the device version, e.g. manufacturer, approved, internal.</summary>
		[JsonProperty(PropertyName = "type")]
		public CodeableConcept Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>The version text.</summary>
		[JsonProperty(PropertyName = "value")]
		public string Value { get; set; }
		///<summary>May contain extended information for property: 'Value'</summary>
		[JsonProperty(PropertyName = "_value")]
		public Element _Value { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Distance Type: A length - a value with a unit that is a physical distance.
	///</summary>
	///<source-file>c:\git\fhir\publish\distance.profile.canonical.json</source-file>
	public class Distance : Quantity
	{
	}
	///<summary>
	///A resource that includes narrative, extensions, and contained resources.
	///</summary>
	///<source-file>c:\git\fhir\publish\domainresource.profile.canonical.json</source-file>
	public class DomainResource : Resource
	{
		///<summary>These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.</summary>
		[JsonProperty(PropertyName = "contained")]
		public Resource[] Contained { get; set; }
		///<summary>May contain extended information for property: 'Contained'</summary>
		[JsonProperty(PropertyName = "_contained")]
		public Element[] _Contained { get; set; }
		///<summary>May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.</summary>
		[JsonProperty(PropertyName = "extension")]
		public Extension[] Extension { get; set; }
		///<summary>May contain extended information for property: 'Extension'</summary>
		[JsonProperty(PropertyName = "_extension")]
		public Element[] _Extension { get; set; }
		///<summary>May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
		/// 
		/// Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).</summary>
		[JsonProperty(PropertyName = "modifierExtension")]
		public Extension[] ModifierExtension { get; set; }
		///<summary>May contain extended information for property: 'ModifierExtension'</summary>
		[JsonProperty(PropertyName = "_modifierExtension")]
		public Element[] _ModifierExtension { get; set; }
		///<summary>A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.</summary>
		[JsonProperty(PropertyName = "text")]
		public Narrative Text { get; set; }
		///<summary>May contain extended information for property: 'Text'</summary>
		[JsonProperty(PropertyName = "_text")]
		public Element _Text { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Dosage Type: Indicates how the medication is/was taken or should be taken by the patient.
	///</summary>
	///<source-file>c:\git\fhir\publish\dosage.profile.canonical.json</source-file>
	public class Dosage : BackboneElement
	{
		///<summary>Supplemental instructions to the patient on how to take the medication  (e.g. "with meals" or"take half to one hour before food") or warnings for the patient about the medication (e.g. "may cause drowsiness" or "avoid exposure of skin to direct sunlight or sunlamps").</summary>
		[JsonProperty(PropertyName = "additionalInstruction")]
		public CodeableConcept[] AdditionalInstruction { get; set; }
		///<summary>May contain extended information for property: 'AdditionalInstruction'</summary>
		[JsonProperty(PropertyName = "_additionalInstruction")]
		public Element[] _AdditionalInstruction { get; set; }
		///<summary>Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).</summary>
		[JsonProperty(PropertyName = "asNeededBoolean")]
		public bool? AsNeededBoolean { get; set; }
		///<summary>May contain extended information for property: 'AsNeededBoolean'</summary>
		[JsonProperty(PropertyName = "_asNeededBoolean")]
		public Element _AsNeededBoolean { get; set; }
		///<summary>Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).</summary>
		[JsonProperty(PropertyName = "asNeededCodeableConcept")]
		public CodeableConcept AsNeededCodeableConcept { get; set; }
		///<summary>May contain extended information for property: 'AsNeededCodeableConcept'</summary>
		[JsonProperty(PropertyName = "_asNeededCodeableConcept")]
		public Element _AsNeededCodeableConcept { get; set; }
		///<summary>The amount of medication administered.</summary>
		[JsonProperty(PropertyName = "doseAndRate")]
		public DosageDoseAndRate[] DoseAndRate { get; set; }
		///<summary>May contain extended information for property: 'DoseAndRate'</summary>
		[JsonProperty(PropertyName = "_doseAndRate")]
		public Element[] _DoseAndRate { get; set; }
		///<summary>Upper limit on medication per administration.</summary>
		[JsonProperty(PropertyName = "maxDosePerAdministration")]
		public Quantity MaxDosePerAdministration { get; set; }
		///<summary>May contain extended information for property: 'MaxDosePerAdministration'</summary>
		[JsonProperty(PropertyName = "_maxDosePerAdministration")]
		public Element _MaxDosePerAdministration { get; set; }
		///<summary>Upper limit on medication per lifetime of the patient.</summary>
		[JsonProperty(PropertyName = "maxDosePerLifetime")]
		public Quantity MaxDosePerLifetime { get; set; }
		///<summary>May contain extended information for property: 'MaxDosePerLifetime'</summary>
		[JsonProperty(PropertyName = "_maxDosePerLifetime")]
		public Element _MaxDosePerLifetime { get; set; }
		///<summary>Upper limit on medication per unit of time.</summary>
		[JsonProperty(PropertyName = "maxDosePerPeriod")]
		public Ratio MaxDosePerPeriod { get; set; }
		///<summary>May contain extended information for property: 'MaxDosePerPeriod'</summary>
		[JsonProperty(PropertyName = "_maxDosePerPeriod")]
		public Element _MaxDosePerPeriod { get; set; }
		///<summary>Technique for administering medication.</summary>
		[JsonProperty(PropertyName = "method")]
		public CodeableConcept Method { get; set; }
		///<summary>May contain extended information for property: 'Method'</summary>
		[JsonProperty(PropertyName = "_method")]
		public Element _Method { get; set; }
		///<summary>Instructions in terms that are understood by the patient or consumer.</summary>
		[JsonProperty(PropertyName = "patientInstruction")]
		public string PatientInstruction { get; set; }
		///<summary>May contain extended information for property: 'PatientInstruction'</summary>
		[JsonProperty(PropertyName = "_patientInstruction")]
		public Element _PatientInstruction { get; set; }
		///<summary>How drug should enter body.</summary>
		[JsonProperty(PropertyName = "route")]
		public CodeableConcept Route { get; set; }
		///<summary>May contain extended information for property: 'Route'</summary>
		[JsonProperty(PropertyName = "_route")]
		public Element _Route { get; set; }
		///<summary>Indicates the order in which the dosage instructions should be applied or interpreted.</summary>
		[JsonProperty(PropertyName = "sequence")]
		public int? Sequence { get; set; }
		///<summary>May contain extended information for property: 'Sequence'</summary>
		[JsonProperty(PropertyName = "_sequence")]
		public Element _Sequence { get; set; }
		///<summary>Body site to administer to.</summary>
		[JsonProperty(PropertyName = "site")]
		public CodeableConcept Site { get; set; }
		///<summary>May contain extended information for property: 'Site'</summary>
		[JsonProperty(PropertyName = "_site")]
		public Element _Site { get; set; }
		///<summary>Free text dosage instructions e.g. SIG.</summary>
		[JsonProperty(PropertyName = "text")]
		public string Text { get; set; }
		///<summary>May contain extended information for property: 'Text'</summary>
		[JsonProperty(PropertyName = "_text")]
		public Element _Text { get; set; }
		///<summary>When medication should be administered.</summary>
		[JsonProperty(PropertyName = "timing")]
		public Timing Timing { get; set; }
		///<summary>May contain extended information for property: 'Timing'</summary>
		[JsonProperty(PropertyName = "_timing")]
		public Element _Timing { get; set; }
	}
	///<summary>
	///The amount of medication administered.
	///</summary>
	///<source-file>c:\git\fhir\publish\dosage.profile.canonical.json</source-file>
	public class DosageDoseAndRate : Element
	{
		///<summary>Amount of medication per dose.</summary>
		[JsonProperty(PropertyName = "doseQuantity")]
		public Quantity DoseQuantity { get; set; }
		///<summary>May contain extended information for property: 'DoseQuantity'</summary>
		[JsonProperty(PropertyName = "_doseQuantity")]
		public Element _DoseQuantity { get; set; }
		///<summary>Amount of medication per dose.</summary>
		[JsonProperty(PropertyName = "doseRange")]
		public Range DoseRange { get; set; }
		///<summary>May contain extended information for property: 'DoseRange'</summary>
		[JsonProperty(PropertyName = "_doseRange")]
		public Element _DoseRange { get; set; }
		///<summary>Amount of medication per unit of time.</summary>
		[JsonProperty(PropertyName = "rateQuantity")]
		public Quantity RateQuantity { get; set; }
		///<summary>May contain extended information for property: 'RateQuantity'</summary>
		[JsonProperty(PropertyName = "_rateQuantity")]
		public Element _RateQuantity { get; set; }
		///<summary>Amount of medication per unit of time.</summary>
		[JsonProperty(PropertyName = "rateRange")]
		public Range RateRange { get; set; }
		///<summary>May contain extended information for property: 'RateRange'</summary>
		[JsonProperty(PropertyName = "_rateRange")]
		public Element _RateRange { get; set; }
		///<summary>Amount of medication per unit of time.</summary>
		[JsonProperty(PropertyName = "rateRatio")]
		public Ratio RateRatio { get; set; }
		///<summary>May contain extended information for property: 'RateRatio'</summary>
		[JsonProperty(PropertyName = "_rateRatio")]
		public Element _RateRatio { get; set; }
		///<summary>The kind of dose or rate specified, for example, ordered or calculated.</summary>
		[JsonProperty(PropertyName = "type")]
		public CodeableConcept Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Duration Type: A length of time.
	///</summary>
	///<source-file>c:\git\fhir\publish\duration.profile.canonical.json</source-file>
	public class Duration : Quantity
	{
	}
	///<summary>
	///Base StructureDefinition for Element Type: Base definition for all elements in a resource.
	///</summary>
	///<source-file>c:\git\fhir\publish\element.profile.canonical.json</source-file>
	public class Element
	{
		///<summary>May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.</summary>
		[JsonProperty(PropertyName = "extension")]
		public Extension[] Extension { get; set; }
		///<summary>May contain extended information for property: 'Extension'</summary>
		[JsonProperty(PropertyName = "_extension")]
		public Element[] _Extension { get; set; }
		///<summary>Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.</summary>
		[JsonProperty(PropertyName = "id")]
		public string Id { get; set; }
		///<summary>May contain extended information for property: 'Id'</summary>
		[JsonProperty(PropertyName = "_id")]
		public Element _Id { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.
	///</summary>
	///<source-file>c:\git\fhir\publish\expression.profile.canonical.json</source-file>
	public class Expression : Element
	{
		///<summary>A brief, natural language description of the condition that effectively communicates the intended semantics.</summary>
		[JsonProperty(PropertyName = "description")]
		public string Description { get; set; }
		///<summary>May contain extended information for property: 'Description'</summary>
		[JsonProperty(PropertyName = "_description")]
		public Element _Description { get; set; }
		///<summary>An expression in the specified language that returns a value.</summary>
		[JsonProperty(PropertyName = "expression")]
		public string expression { get; set; }
		///<summary>May contain extended information for property: 'expression'</summary>
		[JsonProperty(PropertyName = "_expression")]
		public Element _expression { get; set; }
		///<summary>The media type of the language for the expression.</summary>
		[JsonProperty(PropertyName = "language")]
		public string Language { get; set; }
		///<summary>May contain extended information for property: 'Language'</summary>
		[JsonProperty(PropertyName = "_language")]
		public Element _Language { get; set; }
		///<summary>A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>A URI that defines where the expression is found.</summary>
		[JsonProperty(PropertyName = "reference")]
		public string Reference { get; set; }
		///<summary>May contain extended information for property: 'Reference'</summary>
		[JsonProperty(PropertyName = "_reference")]
		public Element _Reference { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Extension Type: Optional Extension Element - found in all resources.
	///</summary>
	///<source-file>c:\git\fhir\publish\extension.profile.canonical.json</source-file>
	public class Extension : Element
	{
		///<summary>Source of the definition for the extension code - a logical name or a URL.</summary>
		[JsonProperty(PropertyName = "url")]
		public string Url { get; set; }
		///<summary>May contain extended information for property: 'Url'</summary>
		[JsonProperty(PropertyName = "_url")]
		public Element _Url { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueAddress")]
		public Address ValueAddress { get; set; }
		///<summary>May contain extended information for property: 'ValueAddress'</summary>
		[JsonProperty(PropertyName = "_valueAddress")]
		public Element _ValueAddress { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueAge")]
		public Age ValueAge { get; set; }
		///<summary>May contain extended information for property: 'ValueAge'</summary>
		[JsonProperty(PropertyName = "_valueAge")]
		public Element _ValueAge { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueAnnotation")]
		public Annotation ValueAnnotation { get; set; }
		///<summary>May contain extended information for property: 'ValueAnnotation'</summary>
		[JsonProperty(PropertyName = "_valueAnnotation")]
		public Element _ValueAnnotation { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueAttachment")]
		public Attachment ValueAttachment { get; set; }
		///<summary>May contain extended information for property: 'ValueAttachment'</summary>
		[JsonProperty(PropertyName = "_valueAttachment")]
		public Element _ValueAttachment { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueBase64Binary")]
		public string ValueBase64Binary { get; set; }
		///<summary>May contain extended information for property: 'ValueBase64Binary'</summary>
		[JsonProperty(PropertyName = "_valueBase64Binary")]
		public Element _ValueBase64Binary { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueBoolean")]
		public bool? ValueBoolean { get; set; }
		///<summary>May contain extended information for property: 'ValueBoolean'</summary>
		[JsonProperty(PropertyName = "_valueBoolean")]
		public Element _ValueBoolean { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueCanonical")]
		public string ValueCanonical { get; set; }
		///<summary>May contain extended information for property: 'ValueCanonical'</summary>
		[JsonProperty(PropertyName = "_valueCanonical")]
		public Element _ValueCanonical { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueCode")]
		public string ValueCode { get; set; }
		///<summary>May contain extended information for property: 'ValueCode'</summary>
		[JsonProperty(PropertyName = "_valueCode")]
		public Element _ValueCode { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueCodeableConcept")]
		public CodeableConcept ValueCodeableConcept { get; set; }
		///<summary>May contain extended information for property: 'ValueCodeableConcept'</summary>
		[JsonProperty(PropertyName = "_valueCodeableConcept")]
		public Element _ValueCodeableConcept { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueCoding")]
		public Coding ValueCoding { get; set; }
		///<summary>May contain extended information for property: 'ValueCoding'</summary>
		[JsonProperty(PropertyName = "_valueCoding")]
		public Element _ValueCoding { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueContactDetail")]
		public ContactDetail ValueContactDetail { get; set; }
		///<summary>May contain extended information for property: 'ValueContactDetail'</summary>
		[JsonProperty(PropertyName = "_valueContactDetail")]
		public Element _ValueContactDetail { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueContactPoint")]
		public ContactPoint ValueContactPoint { get; set; }
		///<summary>May contain extended information for property: 'ValueContactPoint'</summary>
		[JsonProperty(PropertyName = "_valueContactPoint")]
		public Element _ValueContactPoint { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueContributor")]
		public Contributor ValueContributor { get; set; }
		///<summary>May contain extended information for property: 'ValueContributor'</summary>
		[JsonProperty(PropertyName = "_valueContributor")]
		public Element _ValueContributor { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueCount")]
		public Count ValueCount { get; set; }
		///<summary>May contain extended information for property: 'ValueCount'</summary>
		[JsonProperty(PropertyName = "_valueCount")]
		public Element _ValueCount { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDataRequirement")]
		public DataRequirement ValueDataRequirement { get; set; }
		///<summary>May contain extended information for property: 'ValueDataRequirement'</summary>
		[JsonProperty(PropertyName = "_valueDataRequirement")]
		public Element _ValueDataRequirement { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDate")]
		public string ValueDate { get; set; }
		///<summary>May contain extended information for property: 'ValueDate'</summary>
		[JsonProperty(PropertyName = "_valueDate")]
		public Element _ValueDate { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDateTime")]
		public string ValueDateTime { get; set; }
		///<summary>May contain extended information for property: 'ValueDateTime'</summary>
		[JsonProperty(PropertyName = "_valueDateTime")]
		public Element _ValueDateTime { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDecimal")]
		public decimal? ValueDecimal { get; set; }
		///<summary>May contain extended information for property: 'ValueDecimal'</summary>
		[JsonProperty(PropertyName = "_valueDecimal")]
		public Element _ValueDecimal { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDistance")]
		public Distance ValueDistance { get; set; }
		///<summary>May contain extended information for property: 'ValueDistance'</summary>
		[JsonProperty(PropertyName = "_valueDistance")]
		public Element _ValueDistance { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDosage")]
		public Dosage ValueDosage { get; set; }
		///<summary>May contain extended information for property: 'ValueDosage'</summary>
		[JsonProperty(PropertyName = "_valueDosage")]
		public Element _ValueDosage { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueDuration")]
		public Duration ValueDuration { get; set; }
		///<summary>May contain extended information for property: 'ValueDuration'</summary>
		[JsonProperty(PropertyName = "_valueDuration")]
		public Element _ValueDuration { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueExpression")]
		public Expression ValueExpression { get; set; }
		///<summary>May contain extended information for property: 'ValueExpression'</summary>
		[JsonProperty(PropertyName = "_valueExpression")]
		public Element _ValueExpression { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueHumanName")]
		public HumanName ValueHumanName { get; set; }
		///<summary>May contain extended information for property: 'ValueHumanName'</summary>
		[JsonProperty(PropertyName = "_valueHumanName")]
		public Element _ValueHumanName { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueId")]
		public string ValueId { get; set; }
		///<summary>May contain extended information for property: 'ValueId'</summary>
		[JsonProperty(PropertyName = "_valueId")]
		public Element _ValueId { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueIdentifier")]
		public Identifier ValueIdentifier { get; set; }
		///<summary>May contain extended information for property: 'ValueIdentifier'</summary>
		[JsonProperty(PropertyName = "_valueIdentifier")]
		public Element _ValueIdentifier { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueInstant")]
		public string ValueInstant { get; set; }
		///<summary>May contain extended information for property: 'ValueInstant'</summary>
		[JsonProperty(PropertyName = "_valueInstant")]
		public Element _ValueInstant { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueInteger")]
		public int? ValueInteger { get; set; }
		///<summary>May contain extended information for property: 'ValueInteger'</summary>
		[JsonProperty(PropertyName = "_valueInteger")]
		public Element _ValueInteger { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueMarkdown")]
		public string ValueMarkdown { get; set; }
		///<summary>May contain extended information for property: 'ValueMarkdown'</summary>
		[JsonProperty(PropertyName = "_valueMarkdown")]
		public Element _ValueMarkdown { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueMoney")]
		public Money ValueMoney { get; set; }
		///<summary>May contain extended information for property: 'ValueMoney'</summary>
		[JsonProperty(PropertyName = "_valueMoney")]
		public Element _ValueMoney { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueOid")]
		public string ValueOid { get; set; }
		///<summary>May contain extended information for property: 'ValueOid'</summary>
		[JsonProperty(PropertyName = "_valueOid")]
		public Element _ValueOid { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueParameterDefinition")]
		public ParameterDefinition ValueParameterDefinition { get; set; }
		///<summary>May contain extended information for property: 'ValueParameterDefinition'</summary>
		[JsonProperty(PropertyName = "_valueParameterDefinition")]
		public Element _ValueParameterDefinition { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valuePeriod")]
		public Period ValuePeriod { get; set; }
		///<summary>May contain extended information for property: 'ValuePeriod'</summary>
		[JsonProperty(PropertyName = "_valuePeriod")]
		public Element _ValuePeriod { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valuePositiveInt")]
		public uint? ValuePositiveInt { get; set; }
		///<summary>May contain extended information for property: 'ValuePositiveInt'</summary>
		[JsonProperty(PropertyName = "_valuePositiveInt")]
		public Element _ValuePositiveInt { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueQuantity")]
		public Quantity ValueQuantity { get; set; }
		///<summary>May contain extended information for property: 'ValueQuantity'</summary>
		[JsonProperty(PropertyName = "_valueQuantity")]
		public Element _ValueQuantity { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueRange")]
		public Range ValueRange { get; set; }
		///<summary>May contain extended information for property: 'ValueRange'</summary>
		[JsonProperty(PropertyName = "_valueRange")]
		public Element _ValueRange { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueRatio")]
		public Ratio ValueRatio { get; set; }
		///<summary>May contain extended information for property: 'ValueRatio'</summary>
		[JsonProperty(PropertyName = "_valueRatio")]
		public Element _ValueRatio { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueReference")]
		public Reference ValueReference { get; set; }
		///<summary>May contain extended information for property: 'ValueReference'</summary>
		[JsonProperty(PropertyName = "_valueReference")]
		public Element _ValueReference { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueRelatedArtifact")]
		public RelatedArtifact ValueRelatedArtifact { get; set; }
		///<summary>May contain extended information for property: 'ValueRelatedArtifact'</summary>
		[JsonProperty(PropertyName = "_valueRelatedArtifact")]
		public Element _ValueRelatedArtifact { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueSampledData")]
		public SampledData ValueSampledData { get; set; }
		///<summary>May contain extended information for property: 'ValueSampledData'</summary>
		[JsonProperty(PropertyName = "_valueSampledData")]
		public Element _ValueSampledData { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueSignature")]
		public Signature ValueSignature { get; set; }
		///<summary>May contain extended information for property: 'ValueSignature'</summary>
		[JsonProperty(PropertyName = "_valueSignature")]
		public Element _ValueSignature { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueString")]
		public string ValueString { get; set; }
		///<summary>May contain extended information for property: 'ValueString'</summary>
		[JsonProperty(PropertyName = "_valueString")]
		public Element _ValueString { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueTime")]
		public string ValueTime { get; set; }
		///<summary>May contain extended information for property: 'ValueTime'</summary>
		[JsonProperty(PropertyName = "_valueTime")]
		public Element _ValueTime { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueTiming")]
		public Timing ValueTiming { get; set; }
		///<summary>May contain extended information for property: 'ValueTiming'</summary>
		[JsonProperty(PropertyName = "_valueTiming")]
		public Element _ValueTiming { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueTriggerDefinition")]
		public TriggerDefinition ValueTriggerDefinition { get; set; }
		///<summary>May contain extended information for property: 'ValueTriggerDefinition'</summary>
		[JsonProperty(PropertyName = "_valueTriggerDefinition")]
		public Element _ValueTriggerDefinition { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueUnsignedInt")]
		public uint? ValueUnsignedInt { get; set; }
		///<summary>May contain extended information for property: 'ValueUnsignedInt'</summary>
		[JsonProperty(PropertyName = "_valueUnsignedInt")]
		public Element _ValueUnsignedInt { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueUri")]
		public string ValueUri { get; set; }
		///<summary>May contain extended information for property: 'ValueUri'</summary>
		[JsonProperty(PropertyName = "_valueUri")]
		public Element _ValueUri { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueUrl")]
		public string ValueUrl { get; set; }
		///<summary>May contain extended information for property: 'ValueUrl'</summary>
		[JsonProperty(PropertyName = "_valueUrl")]
		public Element _ValueUrl { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueUsageContext")]
		public UsageContext ValueUsageContext { get; set; }
		///<summary>May contain extended information for property: 'ValueUsageContext'</summary>
		[JsonProperty(PropertyName = "_valueUsageContext")]
		public Element _ValueUsageContext { get; set; }
		///<summary>Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).</summary>
		[JsonProperty(PropertyName = "valueUuid")]
		public Guid? ValueUuid { get; set; }
		///<summary>May contain extended information for property: 'ValueUuid'</summary>
		[JsonProperty(PropertyName = "_valueUuid")]
		public Element _ValueUuid { get; set; }
	}
	///<summary>
	///Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
	///</summary>
	///<source-file>c:\git\fhir\publish\group.profile.canonical.json</source-file>
	public class Group : DomainResource
	{
		///<summary>Resource Type Name (for serialization)</summary>
		[JsonProperty(PropertyName = "resourceType")]
		public string ResourceType => "Group";
		///<summary>Indicates whether the record for the group is available for use or is merely being retained for historical purposes.</summary>
		[JsonProperty(PropertyName = "active")]
		public bool? Active { get; set; }
		///<summary>May contain extended information for property: 'Active'</summary>
		[JsonProperty(PropertyName = "_active")]
		public Element _Active { get; set; }
		///<summary>If true, indicates that the resource refers to a specific group of real individuals.  If false, the group defines a set of intended individuals.</summary>
		[JsonProperty(PropertyName = "actual")]
		public bool Actual { get; set; }
		///<summary>May contain extended information for property: 'Actual'</summary>
		[JsonProperty(PropertyName = "_actual")]
		public Element _Actual { get; set; }
		///<summary>Identifies traits whose presence r absence is shared by members of the group.</summary>
		[JsonProperty(PropertyName = "characteristic")]
		public GroupCharacteristic[] Characteristic { get; set; }
		///<summary>May contain extended information for property: 'Characteristic'</summary>
		[JsonProperty(PropertyName = "_characteristic")]
		public Element[] _Characteristic { get; set; }
		///<summary>Provides a specific type of resource the group includes; e.g. "cow", "syringe", etc.</summary>
		[JsonProperty(PropertyName = "code")]
		public CodeableConcept Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element _Code { get; set; }
		///<summary>A unique business identifier for this group.</summary>
		[JsonProperty(PropertyName = "identifier")]
		public Identifier[] Identifier { get; set; }
		///<summary>May contain extended information for property: 'Identifier'</summary>
		[JsonProperty(PropertyName = "_identifier")]
		public Element[] _Identifier { get; set; }
		///<summary>Entity responsible for defining and maintaining Group characteristics and/or registered members.</summary>
		[JsonProperty(PropertyName = "managingEntity")]
		public Reference ManagingEntity { get; set; }
		///<summary>May contain extended information for property: 'ManagingEntity'</summary>
		[JsonProperty(PropertyName = "_managingEntity")]
		public Element _ManagingEntity { get; set; }
		///<summary>Identifies the resource instances that are members of the group.</summary>
		[JsonProperty(PropertyName = "member")]
		public GroupMember[] Member { get; set; }
		///<summary>May contain extended information for property: 'Member'</summary>
		[JsonProperty(PropertyName = "_member")]
		public Element[] _Member { get; set; }
		///<summary>A label assigned to the group for human identification and communication.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>A count of the number of resource instances that are part of the group.</summary>
		[JsonProperty(PropertyName = "quantity")]
		public uint? Quantity { get; set; }
		///<summary>May contain extended information for property: 'Quantity'</summary>
		[JsonProperty(PropertyName = "_quantity")]
		public Element _Quantity { get; set; }
		///<summary>Group members SHALL be of the appropriate resource type (Patient for person or animal; or Practitioner, Device, Medication or Substance for the other types.).</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///Identifies traits whose presence r absence is shared by members of the group.
	///</summary>
	///<source-file>c:\git\fhir\publish\group.profile.canonical.json</source-file>
	public class GroupCharacteristic : Element
	{
		///<summary>A code that identifies the kind of trait being asserted.</summary>
		[JsonProperty(PropertyName = "code")]
		public CodeableConcept Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element _Code { get; set; }
		///<summary>If true, indicates the characteristic is one that is NOT held by members of the group.</summary>
		[JsonProperty(PropertyName = "exclude")]
		public bool Exclude { get; set; }
		///<summary>May contain extended information for property: 'Exclude'</summary>
		[JsonProperty(PropertyName = "_exclude")]
		public Element _Exclude { get; set; }
		///<summary>The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.</summary>
		[JsonProperty(PropertyName = "period")]
		public Period Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>The value of the trait that holds (or does not hold - see 'exclude') for members of the group.</summary>
		[JsonProperty(PropertyName = "valueBoolean")]
		public bool? ValueBoolean { get; set; }
		///<summary>May contain extended information for property: 'ValueBoolean'</summary>
		[JsonProperty(PropertyName = "_valueBoolean")]
		public Element _ValueBoolean { get; set; }
		///<summary>The value of the trait that holds (or does not hold - see 'exclude') for members of the group.</summary>
		[JsonProperty(PropertyName = "valueCodeableConcept")]
		public CodeableConcept ValueCodeableConcept { get; set; }
		///<summary>May contain extended information for property: 'ValueCodeableConcept'</summary>
		[JsonProperty(PropertyName = "_valueCodeableConcept")]
		public Element _ValueCodeableConcept { get; set; }
		///<summary>The value of the trait that holds (or does not hold - see 'exclude') for members of the group.</summary>
		[JsonProperty(PropertyName = "valueQuantity")]
		public Quantity ValueQuantity { get; set; }
		///<summary>May contain extended information for property: 'ValueQuantity'</summary>
		[JsonProperty(PropertyName = "_valueQuantity")]
		public Element _ValueQuantity { get; set; }
		///<summary>The value of the trait that holds (or does not hold - see 'exclude') for members of the group.</summary>
		[JsonProperty(PropertyName = "valueRange")]
		public Range ValueRange { get; set; }
		///<summary>May contain extended information for property: 'ValueRange'</summary>
		[JsonProperty(PropertyName = "_valueRange")]
		public Element _ValueRange { get; set; }
		///<summary>The value of the trait that holds (or does not hold - see 'exclude') for members of the group.</summary>
		[JsonProperty(PropertyName = "valueReference")]
		public Reference ValueReference { get; set; }
		///<summary>May contain extended information for property: 'ValueReference'</summary>
		[JsonProperty(PropertyName = "_valueReference")]
		public Element _ValueReference { get; set; }
	}
	///<summary>
	///Identifies the resource instances that are members of the group.
	///</summary>
	///<source-file>c:\git\fhir\publish\group.profile.canonical.json</source-file>
	public class GroupMember : Element
	{
		///<summary>A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same.</summary>
		[JsonProperty(PropertyName = "entity")]
		public Reference Entity { get; set; }
		///<summary>May contain extended information for property: 'Entity'</summary>
		[JsonProperty(PropertyName = "_entity")]
		public Element _Entity { get; set; }
		///<summary>A flag to indicate that the member is no longer in the group, but previously may have been a member.</summary>
		[JsonProperty(PropertyName = "inactive")]
		public bool? Inactive { get; set; }
		///<summary>May contain extended information for property: 'Inactive'</summary>
		[JsonProperty(PropertyName = "_inactive")]
		public Element _Inactive { get; set; }
		///<summary>The period that the member was in the group, if known.</summary>
		[JsonProperty(PropertyName = "period")]
		public Period Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
	}
	///<summary>
	///Base StructureDefinition for HumanName Type: A human's name with the ability to identify parts and usage.
	///</summary>
	///<source-file>c:\git\fhir\publish\humanname.profile.canonical.json</source-file>
	public class HumanName : Element
	{
		///<summary>The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.</summary>
		[JsonProperty(PropertyName = "family")]
		public string Family { get; set; }
		///<summary>May contain extended information for property: 'Family'</summary>
		[JsonProperty(PropertyName = "_family")]
		public Element _Family { get; set; }
		///<summary>Given name.</summary>
		[JsonProperty(PropertyName = "given")]
		public string[] Given { get; set; }
		///<summary>May contain extended information for property: 'Given'</summary>
		[JsonProperty(PropertyName = "_given")]
		public Element[] _Given { get; set; }
		///<summary>Indicates the period of time when this name was valid for the named person.</summary>
		[JsonProperty(PropertyName = "period")]
		public Period Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.</summary>
		[JsonProperty(PropertyName = "prefix")]
		public string[] Prefix { get; set; }
		///<summary>May contain extended information for property: 'Prefix'</summary>
		[JsonProperty(PropertyName = "_prefix")]
		public Element[] _Prefix { get; set; }
		///<summary>Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.</summary>
		[JsonProperty(PropertyName = "suffix")]
		public string[] Suffix { get; set; }
		///<summary>May contain extended information for property: 'Suffix'</summary>
		[JsonProperty(PropertyName = "_suffix")]
		public Element[] _Suffix { get; set; }
		///<summary>Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.</summary>
		[JsonProperty(PropertyName = "text")]
		public string Text { get; set; }
		///<summary>May contain extended information for property: 'Text'</summary>
		[JsonProperty(PropertyName = "_text")]
		public Element _Text { get; set; }
		///<summary>Applications can assume that a name is current unless it explicitly says that it is temporary or old.</summary>
		[JsonProperty(PropertyName = "use")]
		public string Use { get; set; }
		///<summary>May contain extended information for property: 'Use'</summary>
		[JsonProperty(PropertyName = "_use")]
		public Element _Use { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
	///</summary>
	///<source-file>c:\git\fhir\publish\identifier.profile.canonical.json</source-file>
	public class Identifier : Element
	{
		///<summary>Organization that issued/manages the identifier.</summary>
		[JsonProperty(PropertyName = "assigner")]
		public Reference Assigner { get; set; }
		///<summary>May contain extended information for property: 'Assigner'</summary>
		[JsonProperty(PropertyName = "_assigner")]
		public Element _Assigner { get; set; }
		///<summary>Time period during which identifier is/was valid for use.</summary>
		[JsonProperty(PropertyName = "period")]
		public Period Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>Establishes the namespace for the value - that is, a URL that describes a set values that are unique.</summary>
		[JsonProperty(PropertyName = "system")]
		public string System { get; set; }
		///<summary>May contain extended information for property: 'System'</summary>
		[JsonProperty(PropertyName = "_system")]
		public Element _System { get; set; }
		///<summary>A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.</summary>
		[JsonProperty(PropertyName = "type")]
		public CodeableConcept Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>Applications can assume that an identifier is permanent unless it explicitly says that it is temporary.</summary>
		[JsonProperty(PropertyName = "use")]
		public string Use { get; set; }
		///<summary>May contain extended information for property: 'Use'</summary>
		[JsonProperty(PropertyName = "_use")]
		public Element _Use { get; set; }
		///<summary>The portion of the identifier typically relevant to the user and which is unique within the context of the system.</summary>
		[JsonProperty(PropertyName = "value")]
		public string Value { get; set; }
		///<summary>May contain extended information for property: 'Value'</summary>
		[JsonProperty(PropertyName = "_value")]
		public Element _Value { get; set; }
	}
	///<summary>
	///Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
	///</summary>
	///<source-file>c:\git\fhir\publish\location.profile.canonical.json</source-file>
	public class Location : DomainResource
	{
		///<summary>Resource Type Name (for serialization)</summary>
		[JsonProperty(PropertyName = "resourceType")]
		public string ResourceType => "Location";
		///<summary>Physical location.</summary>
		[JsonProperty(PropertyName = "address")]
		public Address Address { get; set; }
		///<summary>May contain extended information for property: 'Address'</summary>
		[JsonProperty(PropertyName = "_address")]
		public Element _Address { get; set; }
		///<summary>A list of alternate names that the location is known as, or was known as, in the past.</summary>
		[JsonProperty(PropertyName = "alias")]
		public string[] Alias { get; set; }
		///<summary>May contain extended information for property: 'Alias'</summary>
		[JsonProperty(PropertyName = "_alias")]
		public Element[] _Alias { get; set; }
		///<summary>A description of when the locations opening ours are different to normal, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as detailed in the opening hours Times.</summary>
		[JsonProperty(PropertyName = "availabilityExceptions")]
		public string AvailabilityExceptions { get; set; }
		///<summary>May contain extended information for property: 'AvailabilityExceptions'</summary>
		[JsonProperty(PropertyName = "_availabilityExceptions")]
		public Element _AvailabilityExceptions { get; set; }
		///<summary>Description of the Location, which helps in finding or referencing the place.</summary>
		[JsonProperty(PropertyName = "description")]
		public string Description { get; set; }
		///<summary>May contain extended information for property: 'Description'</summary>
		[JsonProperty(PropertyName = "_description")]
		public Element _Description { get; set; }
		///<summary>Technical endpoints providing access to services operated for the location.</summary>
		[JsonProperty(PropertyName = "endpoint")]
		public Reference[] Endpoint { get; set; }
		///<summary>May contain extended information for property: 'Endpoint'</summary>
		[JsonProperty(PropertyName = "_endpoint")]
		public Element[] _Endpoint { get; set; }
		///<summary>What days/times during a week is this location usually open.</summary>
		[JsonProperty(PropertyName = "hoursOfOperation")]
		public LocationHoursOfOperation[] HoursOfOperation { get; set; }
		///<summary>May contain extended information for property: 'HoursOfOperation'</summary>
		[JsonProperty(PropertyName = "_hoursOfOperation")]
		public Element[] _HoursOfOperation { get; set; }
		///<summary>Unique code or number identifying the location to its users.</summary>
		[JsonProperty(PropertyName = "identifier")]
		public Identifier[] Identifier { get; set; }
		///<summary>May contain extended information for property: 'Identifier'</summary>
		[JsonProperty(PropertyName = "_identifier")]
		public Element[] _Identifier { get; set; }
		///<summary>The organization responsible for the provisioning and upkeep of the location.</summary>
		[JsonProperty(PropertyName = "managingOrganization")]
		public Reference ManagingOrganization { get; set; }
		///<summary>May contain extended information for property: 'ManagingOrganization'</summary>
		[JsonProperty(PropertyName = "_managingOrganization")]
		public Element _ManagingOrganization { get; set; }
		///<summary>This is labeled as a modifier because whether or not the location is a class of locations changes how it can be used and understood.</summary>
		[JsonProperty(PropertyName = "mode")]
		public string Mode { get; set; }
		///<summary>May contain extended information for property: 'Mode'</summary>
		[JsonProperty(PropertyName = "_mode")]
		public Element _Mode { get; set; }
		///<summary>Name of the location as used by humans. Does not need to be unique.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>The operational status covers operation values most relevant to beds (but can also apply to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping, and other activities like maintenance.</summary>
		[JsonProperty(PropertyName = "operationalStatus")]
		public Coding OperationalStatus { get; set; }
		///<summary>May contain extended information for property: 'OperationalStatus'</summary>
		[JsonProperty(PropertyName = "_operationalStatus")]
		public Element _OperationalStatus { get; set; }
		///<summary>Another Location of which this Location is physically a part of.</summary>
		[JsonProperty(PropertyName = "partOf")]
		public Reference PartOf { get; set; }
		///<summary>May contain extended information for property: 'PartOf'</summary>
		[JsonProperty(PropertyName = "_partOf")]
		public Element _PartOf { get; set; }
		///<summary>Physical form of the location, e.g. building, room, vehicle, road.</summary>
		[JsonProperty(PropertyName = "physicalType")]
		public CodeableConcept PhysicalType { get; set; }
		///<summary>May contain extended information for property: 'PhysicalType'</summary>
		[JsonProperty(PropertyName = "_physicalType")]
		public Element _PhysicalType { get; set; }
		///<summary>The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).</summary>
		[JsonProperty(PropertyName = "position")]
		public LocationPosition Position { get; set; }
		///<summary>May contain extended information for property: 'Position'</summary>
		[JsonProperty(PropertyName = "_position")]
		public Element _Position { get; set; }
		///<summary>The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.</summary>
		[JsonProperty(PropertyName = "status")]
		public string Status { get; set; }
		///<summary>May contain extended information for property: 'Status'</summary>
		[JsonProperty(PropertyName = "_status")]
		public Element _Status { get; set; }
		///<summary>The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites.</summary>
		[JsonProperty(PropertyName = "telecom")]
		public ContactPoint[] Telecom { get; set; }
		///<summary>May contain extended information for property: 'Telecom'</summary>
		[JsonProperty(PropertyName = "_telecom")]
		public Element[] _Telecom { get; set; }
		///<summary>Indicates the type of function performed at the location.</summary>
		[JsonProperty(PropertyName = "type")]
		public CodeableConcept[] Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element[] _Type { get; set; }
	}
	///<summary>
	///What days/times during a week is this location usually open.
	///</summary>
	///<source-file>c:\git\fhir\publish\location.profile.canonical.json</source-file>
	public class LocationHoursOfOperation : Element
	{
		///<summary>The Location is open all day.</summary>
		[JsonProperty(PropertyName = "allDay")]
		public bool? AllDay { get; set; }
		///<summary>May contain extended information for property: 'AllDay'</summary>
		[JsonProperty(PropertyName = "_allDay")]
		public Element _AllDay { get; set; }
		///<summary>Time that the Location closes.</summary>
		[JsonProperty(PropertyName = "closingTime")]
		public string ClosingTime { get; set; }
		///<summary>May contain extended information for property: 'ClosingTime'</summary>
		[JsonProperty(PropertyName = "_closingTime")]
		public Element _ClosingTime { get; set; }
		///<summary>Indicates which days of the week are available between the start and end Times.</summary>
		[JsonProperty(PropertyName = "daysOfWeek")]
		public string[] DaysOfWeek { get; set; }
		///<summary>May contain extended information for property: 'DaysOfWeek'</summary>
		[JsonProperty(PropertyName = "_daysOfWeek")]
		public Element[] _DaysOfWeek { get; set; }
		///<summary>Time that the Location opens.</summary>
		[JsonProperty(PropertyName = "openingTime")]
		public string OpeningTime { get; set; }
		///<summary>May contain extended information for property: 'OpeningTime'</summary>
		[JsonProperty(PropertyName = "_openingTime")]
		public Element _OpeningTime { get; set; }
	}
	///<summary>
	///The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).
	///</summary>
	///<source-file>c:\git\fhir\publish\location.profile.canonical.json</source-file>
	public class LocationPosition : Element
	{
		///<summary>Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).</summary>
		[JsonProperty(PropertyName = "altitude")]
		public decimal? Altitude { get; set; }
		///<summary>May contain extended information for property: 'Altitude'</summary>
		[JsonProperty(PropertyName = "_altitude")]
		public Element _Altitude { get; set; }
		///<summary>Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).</summary>
		[JsonProperty(PropertyName = "latitude")]
		public decimal Latitude { get; set; }
		///<summary>May contain extended information for property: 'Latitude'</summary>
		[JsonProperty(PropertyName = "_latitude")]
		public Element _Latitude { get; set; }
		///<summary>Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).</summary>
		[JsonProperty(PropertyName = "longitude")]
		public decimal Longitude { get; set; }
		///<summary>May contain extended information for property: 'Longitude'</summary>
		[JsonProperty(PropertyName = "_longitude")]
		public Element _Longitude { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
	///</summary>
	///<source-file>c:\git\fhir\publish\meta.profile.canonical.json</source-file>
	public class Meta : Element
	{
		///<summary>When the resource last changed - e.g. when the version changed.</summary>
		[JsonProperty(PropertyName = "lastUpdated")]
		public string LastUpdated { get; set; }
		///<summary>May contain extended information for property: 'LastUpdated'</summary>
		[JsonProperty(PropertyName = "_lastUpdated")]
		public Element _LastUpdated { get; set; }
		///<summary>A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url).</summary>
		[JsonProperty(PropertyName = "profile")]
		public string[] Profile { get; set; }
		///<summary>May contain extended information for property: 'Profile'</summary>
		[JsonProperty(PropertyName = "_profile")]
		public Element[] _Profile { get; set; }
		///<summary>Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.</summary>
		[JsonProperty(PropertyName = "security")]
		public Coding[] Security { get; set; }
		///<summary>May contain extended information for property: 'Security'</summary>
		[JsonProperty(PropertyName = "_security")]
		public Element[] _Security { get; set; }
		///<summary>A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.</summary>
		[JsonProperty(PropertyName = "source")]
		public string Source { get; set; }
		///<summary>May contain extended information for property: 'Source'</summary>
		[JsonProperty(PropertyName = "_source")]
		public Element _Source { get; set; }
		///<summary>Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.</summary>
		[JsonProperty(PropertyName = "tag")]
		public Coding[] Tag { get; set; }
		///<summary>May contain extended information for property: 'Tag'</summary>
		[JsonProperty(PropertyName = "_tag")]
		public Element[] _Tag { get; set; }
		///<summary>The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.</summary>
		[JsonProperty(PropertyName = "versionId")]
		public string VersionId { get; set; }
		///<summary>May contain extended information for property: 'VersionId'</summary>
		[JsonProperty(PropertyName = "_versionId")]
		public Element _VersionId { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Money Type: An amount of economic utility in some recognized currency.
	///</summary>
	///<source-file>c:\git\fhir\publish\money.profile.canonical.json</source-file>
	public class Money : Element
	{
		///<summary>ISO 4217 Currency Code.</summary>
		[JsonProperty(PropertyName = "currency")]
		public string Currency { get; set; }
		///<summary>May contain extended information for property: 'Currency'</summary>
		[JsonProperty(PropertyName = "_currency")]
		public Element _Currency { get; set; }
		///<summary>Numerical value (with implicit precision).</summary>
		[JsonProperty(PropertyName = "value")]
		public decimal? Value { get; set; }
		///<summary>May contain extended information for property: 'Value'</summary>
		[JsonProperty(PropertyName = "_value")]
		public Element _Value { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.
	///</summary>
	///<source-file>c:\git\fhir\publish\narrative.profile.canonical.json</source-file>
	public class Narrative : Element
	{
		///<summary>The actual narrative content, a stripped down version of XHTML.</summary>
		[JsonProperty(PropertyName = "div")]
		public string Div { get; set; }
		///<summary>May contain extended information for property: 'Div'</summary>
		[JsonProperty(PropertyName = "_div")]
		public Element _Div { get; set; }
		///<summary>The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.</summary>
		[JsonProperty(PropertyName = "status")]
		public string Status { get; set; }
		///<summary>May contain extended information for property: 'Status'</summary>
		[JsonProperty(PropertyName = "_status")]
		public Element _Status { get; set; }
	}
	///<summary>
	///Base StructureDefinition for ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.
	///</summary>
	///<source-file>c:\git\fhir\publish\parameterdefinition.profile.canonical.json</source-file>
	public class ParameterDefinition : Element
	{
		///<summary>A brief discussion of what the parameter is for and how it is used by the module.</summary>
		[JsonProperty(PropertyName = "documentation")]
		public string Documentation { get; set; }
		///<summary>May contain extended information for property: 'Documentation'</summary>
		[JsonProperty(PropertyName = "_documentation")]
		public Element _Documentation { get; set; }
		///<summary>The maximum number of times this element is permitted to appear in the request or response.</summary>
		[JsonProperty(PropertyName = "max")]
		public string Max { get; set; }
		///<summary>May contain extended information for property: 'Max'</summary>
		[JsonProperty(PropertyName = "_max")]
		public Element _Max { get; set; }
		///<summary>The minimum number of times this parameter SHALL appear in the request or response.</summary>
		[JsonProperty(PropertyName = "min")]
		public int? Min { get; set; }
		///<summary>May contain extended information for property: 'Min'</summary>
		[JsonProperty(PropertyName = "_min")]
		public Element _Min { get; set; }
		///<summary>The name of the parameter used to allow access to the value of the parameter in evaluation contexts.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.</summary>
		[JsonProperty(PropertyName = "profile")]
		public string Profile { get; set; }
		///<summary>May contain extended information for property: 'Profile'</summary>
		[JsonProperty(PropertyName = "_profile")]
		public Element _Profile { get; set; }
		///<summary>The type of the parameter.</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>Whether the parameter is input or output for the module.</summary>
		[JsonProperty(PropertyName = "use")]
		public string Use { get; set; }
		///<summary>May contain extended information for property: 'Use'</summary>
		[JsonProperty(PropertyName = "_use")]
		public Element _Use { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Period Type: A time period defined by a start and end date and optionally time.
	///</summary>
	///<source-file>c:\git\fhir\publish\period.profile.canonical.json</source-file>
	public class Period : Element
	{
		///<summary>The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.</summary>
		[JsonProperty(PropertyName = "end")]
		public string End { get; set; }
		///<summary>May contain extended information for property: 'End'</summary>
		[JsonProperty(PropertyName = "_end")]
		public Element _End { get; set; }
		///<summary>The start of the period. The boundary is inclusive.</summary>
		[JsonProperty(PropertyName = "start")]
		public string Start { get; set; }
		///<summary>May contain extended information for property: 'Start'</summary>
		[JsonProperty(PropertyName = "_start")]
		public Element _Start { get; set; }
	}
	///<summary>
	///Base StructureDefinition for positiveInt type: An integer with a value that is positive (e.g. >0)
	///</summary>
	///<source-file>c:\git\fhir\publish\positiveint.profile.canonical.json</source-file>
	public class PositiveInt : Decimal
    {
	}
	///<summary>
	///There SHALL be a code if there is a value and it SHALL be an expression of currency.  If system is present, it SHALL be ISO 4217 (system = "urn:iso:std:iso:4217" - currency).
	///</summary>
	///<source-file>c:\git\fhir\publish\moneyquantity.profile.canonical.json</source-file>
	public class Quantity : Element
	{
		///<summary>The preferred system is UCUM, but SNOMED CT can also be used (for customary units) or ISO 4217 for currency.  The context of use may additionally require a code from a particular system.</summary>
		[JsonProperty(PropertyName = "code")]
		public string Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element _Code { get; set; }
		///<summary>How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.</summary>
		[JsonProperty(PropertyName = "comparator")]
		public string Comparator { get; set; }
		///<summary>May contain extended information for property: 'Comparator'</summary>
		[JsonProperty(PropertyName = "_comparator")]
		public Element _Comparator { get; set; }
		///<summary>The identification of the system that provides the coded form of the unit.</summary>
		[JsonProperty(PropertyName = "system")]
		public string System { get; set; }
		///<summary>May contain extended information for property: 'System'</summary>
		[JsonProperty(PropertyName = "_system")]
		public Element _System { get; set; }
		///<summary>A human-readable form of the unit.</summary>
		[JsonProperty(PropertyName = "unit")]
		public string Unit { get; set; }
		///<summary>May contain extended information for property: 'Unit'</summary>
		[JsonProperty(PropertyName = "_unit")]
		public Element _Unit { get; set; }
		///<summary>The value of the measured amount. The value includes an implicit precision in the presentation of the value.</summary>
		[JsonProperty(PropertyName = "value")]
		public decimal? Value { get; set; }
		///<summary>May contain extended information for property: 'Value'</summary>
		[JsonProperty(PropertyName = "_value")]
		public Element _Value { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Range Type: A set of ordered Quantities defined by a low and high limit.
	///</summary>
	///<source-file>c:\git\fhir\publish\range.profile.canonical.json</source-file>
	public class Range : Element
	{
		///<summary>The high limit. The boundary is inclusive.</summary>
		[JsonProperty(PropertyName = "high")]
		public Quantity High { get; set; }
		///<summary>May contain extended information for property: 'High'</summary>
		[JsonProperty(PropertyName = "_high")]
		public Element _High { get; set; }
		///<summary>The low limit. The boundary is inclusive.</summary>
		[JsonProperty(PropertyName = "low")]
		public Quantity Low { get; set; }
		///<summary>May contain extended information for property: 'Low'</summary>
		[JsonProperty(PropertyName = "_low")]
		public Element _Low { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Ratio Type: A relationship of two Quantity values - expressed as a numerator and a denominator.
	///</summary>
	///<source-file>c:\git\fhir\publish\ratio.profile.canonical.json</source-file>
	public class Ratio : Element
	{
		///<summary>The value of the denominator.</summary>
		[JsonProperty(PropertyName = "denominator")]
		public Quantity Denominator { get; set; }
		///<summary>May contain extended information for property: 'Denominator'</summary>
		[JsonProperty(PropertyName = "_denominator")]
		public Element _Denominator { get; set; }
		///<summary>The value of the numerator.</summary>
		[JsonProperty(PropertyName = "numerator")]
		public Quantity Numerator { get; set; }
		///<summary>May contain extended information for property: 'Numerator'</summary>
		[JsonProperty(PropertyName = "_numerator")]
		public Element _Numerator { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Reference Type: A reference from one resource to another.
	///</summary>
	///<source-file>c:\git\fhir\publish\reference.profile.canonical.json</source-file>
	public class Reference : Element
	{
		///<summary>Plain text narrative that identifies the resource in addition to the resource reference.</summary>
		[JsonProperty(PropertyName = "display")]
		public string Display { get; set; }
		///<summary>May contain extended information for property: 'Display'</summary>
		[JsonProperty(PropertyName = "_display")]
		public Element _Display { get; set; }
		///<summary>An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.</summary>
		[JsonProperty(PropertyName = "identifier")]
		public Identifier Identifier { get; set; }
		///<summary>May contain extended information for property: 'Identifier'</summary>
		[JsonProperty(PropertyName = "_identifier")]
		public Element _Identifier { get; set; }
		///<summary>A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.</summary>
		[JsonProperty(PropertyName = "reference")]
		public string reference { get; set; }
		///<summary>May contain extended information for property: 'reference'</summary>
		[JsonProperty(PropertyName = "_reference")]
		public Element _reference { get; set; }
		///<summary>The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.
		/// 
		/// The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///Base StructureDefinition for RelatedArtifact Type: Related artifacts such as additional documentation, justification, or bibliographic references.
	///</summary>
	///<source-file>c:\git\fhir\publish\relatedartifact.profile.canonical.json</source-file>
	public class RelatedArtifact : Element
	{
		///<summary>A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.</summary>
		[JsonProperty(PropertyName = "citation")]
		public string Citation { get; set; }
		///<summary>May contain extended information for property: 'Citation'</summary>
		[JsonProperty(PropertyName = "_citation")]
		public Element _Citation { get; set; }
		///<summary>A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.</summary>
		[JsonProperty(PropertyName = "display")]
		public string Display { get; set; }
		///<summary>May contain extended information for property: 'Display'</summary>
		[JsonProperty(PropertyName = "_display")]
		public Element _Display { get; set; }
		///<summary>The document being referenced, represented as an attachment. This is exclusive with the resource element.</summary>
		[JsonProperty(PropertyName = "document")]
		public Attachment Document { get; set; }
		///<summary>May contain extended information for property: 'Document'</summary>
		[JsonProperty(PropertyName = "_document")]
		public Element _Document { get; set; }
		///<summary>A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.</summary>
		[JsonProperty(PropertyName = "label")]
		public string Label { get; set; }
		///<summary>May contain extended information for property: 'Label'</summary>
		[JsonProperty(PropertyName = "_label")]
		public Element _Label { get; set; }
		///<summary>The related resource, such as a library, value set, profile, or other knowledge resource.</summary>
		[JsonProperty(PropertyName = "resource")]
		public string Resource { get; set; }
		///<summary>May contain extended information for property: 'Resource'</summary>
		[JsonProperty(PropertyName = "_resource")]
		public Element _Resource { get; set; }
		///<summary>The type of relationship to the related artifact.</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
		///<summary>A url for the artifact that can be followed to access the actual content.</summary>
		[JsonProperty(PropertyName = "url")]
		public string Url { get; set; }
		///<summary>May contain extended information for property: 'Url'</summary>
		[JsonProperty(PropertyName = "_url")]
		public Element _Url { get; set; }
	}
	///<summary>
	///This is the base resource type for everything.
	///</summary>
	///<source-file>c:\git\fhir\publish\resource.profile.canonical.json</source-file>
	public class Resource
	{
		///<summary>The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.</summary>
		[JsonProperty(PropertyName = "id")]
		public string Id { get; set; }
		///<summary>May contain extended information for property: 'Id'</summary>
		[JsonProperty(PropertyName = "_id")]
		public Element _Id { get; set; }
		///<summary>A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.</summary>
		[JsonProperty(PropertyName = "implicitRules")]
		public string ImplicitRules { get; set; }
		///<summary>May contain extended information for property: 'ImplicitRules'</summary>
		[JsonProperty(PropertyName = "_implicitRules")]
		public Element _ImplicitRules { get; set; }
		///<summary>Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).</summary>
		[JsonProperty(PropertyName = "language")]
		public string Language { get; set; }
		///<summary>May contain extended information for property: 'Language'</summary>
		[JsonProperty(PropertyName = "_language")]
		public Element _Language { get; set; }
		///<summary>The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.</summary>
		[JsonProperty(PropertyName = "meta")]
		public Meta Meta { get; set; }
		///<summary>May contain extended information for property: 'Meta'</summary>
		[JsonProperty(PropertyName = "_meta")]
		public Element _Meta { get; set; }
	}
	///<summary>
	///Base StructureDefinition for SampledData Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.
	///</summary>
	///<source-file>c:\git\fhir\publish\sampleddata.profile.canonical.json</source-file>
	public class SampledData : Element
	{
		///<summary>A series of data points which are decimal values separated by a single space (character u20). The special values "E" (error), "L" (below detection limit) and "U" (above detection limit) can also be used in place of a decimal value.</summary>
		[JsonProperty(PropertyName = "data")]
		public string Data { get; set; }
		///<summary>May contain extended information for property: 'Data'</summary>
		[JsonProperty(PropertyName = "_data")]
		public Element _Data { get; set; }
		///<summary>The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.</summary>
		[JsonProperty(PropertyName = "dimensions")]
		public uint Dimensions { get; set; }
		///<summary>May contain extended information for property: 'Dimensions'</summary>
		[JsonProperty(PropertyName = "_dimensions")]
		public Element _Dimensions { get; set; }
		///<summary>A correction factor that is applied to the sampled data points before they are added to the origin.</summary>
		[JsonProperty(PropertyName = "factor")]
		public decimal? Factor { get; set; }
		///<summary>May contain extended information for property: 'Factor'</summary>
		[JsonProperty(PropertyName = "_factor")]
		public Element _Factor { get; set; }
		///<summary>The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).</summary>
		[JsonProperty(PropertyName = "lowerLimit")]
		public decimal? LowerLimit { get; set; }
		///<summary>May contain extended information for property: 'LowerLimit'</summary>
		[JsonProperty(PropertyName = "_lowerLimit")]
		public Element _LowerLimit { get; set; }
		///<summary>The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.</summary>
		[JsonProperty(PropertyName = "origin")]
		public Quantity Origin { get; set; }
		///<summary>May contain extended information for property: 'Origin'</summary>
		[JsonProperty(PropertyName = "_origin")]
		public Element _Origin { get; set; }
		///<summary>The length of time between sampling times, measured in milliseconds.</summary>
		[JsonProperty(PropertyName = "period")]
		public decimal Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).</summary>
		[JsonProperty(PropertyName = "upperLimit")]
		public decimal? UpperLimit { get; set; }
		///<summary>May contain extended information for property: 'UpperLimit'</summary>
		[JsonProperty(PropertyName = "_upperLimit")]
		public Element _UpperLimit { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.
	///</summary>
	///<source-file>c:\git\fhir\publish\signature.profile.canonical.json</source-file>
	public class Signature : Element
	{
		///<summary>The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.</summary>
		[JsonProperty(PropertyName = "data")]
		public string Data { get; set; }
		///<summary>May contain extended information for property: 'Data'</summary>
		[JsonProperty(PropertyName = "_data")]
		public Element _Data { get; set; }
		///<summary>A reference to an application-usable description of the identity that is represented by the signature.</summary>
		[JsonProperty(PropertyName = "onBehalfOf")]
		public Reference OnBehalfOf { get; set; }
		///<summary>May contain extended information for property: 'OnBehalfOf'</summary>
		[JsonProperty(PropertyName = "_onBehalfOf")]
		public Element _OnBehalfOf { get; set; }
		///<summary>A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.</summary>
		[JsonProperty(PropertyName = "sigFormat")]
		public string SigFormat { get; set; }
		///<summary>May contain extended information for property: 'SigFormat'</summary>
		[JsonProperty(PropertyName = "_sigFormat")]
		public Element _SigFormat { get; set; }
		///<summary>"xml", "json" and "ttl" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.</summary>
		[JsonProperty(PropertyName = "targetFormat")]
		public string TargetFormat { get; set; }
		///<summary>May contain extended information for property: 'TargetFormat'</summary>
		[JsonProperty(PropertyName = "_targetFormat")]
		public Element _TargetFormat { get; set; }
		///<summary>An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.</summary>
		[JsonProperty(PropertyName = "type")]
		public Coding[] Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element[] _Type { get; set; }
		///<summary>When the digital signature was signed.</summary>
		[JsonProperty(PropertyName = "when")]
		public string When { get; set; }
		///<summary>May contain extended information for property: 'When'</summary>
		[JsonProperty(PropertyName = "_when")]
		public Element _When { get; set; }
		///<summary>A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).</summary>
		[JsonProperty(PropertyName = "who")]
		public Reference Who { get; set; }
		///<summary>May contain extended information for property: 'Who'</summary>
		[JsonProperty(PropertyName = "_who")]
		public Element _Who { get; set; }
	}
	///<summary>
	///Base StructureDefinition for Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.
	///</summary>
	///<source-file>c:\git\fhir\publish\timing.profile.canonical.json</source-file>
	public class Timing : BackboneElement
	{
		///<summary>A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).</summary>
		[JsonProperty(PropertyName = "code")]
		public CodeableConcept Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element _Code { get; set; }
		///<summary>Identifies specific times when the event occurs.</summary>
		[JsonProperty(PropertyName = "event")]
		public string[] Event { get; set; }
		///<summary>May contain extended information for property: 'Event'</summary>
		[JsonProperty(PropertyName = "_event")]
		public Element[] _Event { get; set; }
		///<summary>A set of rules that describe when the event is scheduled.</summary>
		[JsonProperty(PropertyName = "repeat")]
		public TimingRepeat Repeat { get; set; }
		///<summary>May contain extended information for property: 'Repeat'</summary>
		[JsonProperty(PropertyName = "_repeat")]
		public Element _Repeat { get; set; }
	}
	///<summary>
	///A set of rules that describe when the event is scheduled.
	///</summary>
	///<source-file>c:\git\fhir\publish\timing.profile.canonical.json</source-file>
	public class TimingRepeat : Element
	{
		///<summary>Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.</summary>
		[JsonProperty(PropertyName = "boundsDuration")]
		public Duration BoundsDuration { get; set; }
		///<summary>May contain extended information for property: 'BoundsDuration'</summary>
		[JsonProperty(PropertyName = "_boundsDuration")]
		public Element _BoundsDuration { get; set; }
		///<summary>Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.</summary>
		[JsonProperty(PropertyName = "boundsPeriod")]
		public Period BoundsPeriod { get; set; }
		///<summary>May contain extended information for property: 'BoundsPeriod'</summary>
		[JsonProperty(PropertyName = "_boundsPeriod")]
		public Element _BoundsPeriod { get; set; }
		///<summary>Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.</summary>
		[JsonProperty(PropertyName = "boundsRange")]
		public Range BoundsRange { get; set; }
		///<summary>May contain extended information for property: 'BoundsRange'</summary>
		[JsonProperty(PropertyName = "_boundsRange")]
		public Element _BoundsRange { get; set; }
		///<summary>A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.</summary>
		[JsonProperty(PropertyName = "count")]
		public uint? Count { get; set; }
		///<summary>May contain extended information for property: 'Count'</summary>
		[JsonProperty(PropertyName = "_count")]
		public Element _Count { get; set; }
		///<summary>If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.</summary>
		[JsonProperty(PropertyName = "countMax")]
		public uint? CountMax { get; set; }
		///<summary>May contain extended information for property: 'CountMax'</summary>
		[JsonProperty(PropertyName = "_countMax")]
		public Element _CountMax { get; set; }
		///<summary>If no days are specified, the action is assumed to happen every day as otherwise specified. The elements frequency and period cannot be used as well as dayOfWeek.</summary>
		[JsonProperty(PropertyName = "dayOfWeek")]
		public string[] DayOfWeek { get; set; }
		///<summary>May contain extended information for property: 'DayOfWeek'</summary>
		[JsonProperty(PropertyName = "_dayOfWeek")]
		public Element[] _DayOfWeek { get; set; }
		///<summary>How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.</summary>
		[JsonProperty(PropertyName = "duration")]
		public decimal? Duration { get; set; }
		///<summary>May contain extended information for property: 'Duration'</summary>
		[JsonProperty(PropertyName = "_duration")]
		public Element _Duration { get; set; }
		///<summary>If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.</summary>
		[JsonProperty(PropertyName = "durationMax")]
		public decimal? DurationMax { get; set; }
		///<summary>May contain extended information for property: 'DurationMax'</summary>
		[JsonProperty(PropertyName = "_durationMax")]
		public Element _DurationMax { get; set; }
		///<summary>The units of time for the duration, in UCUM units.</summary>
		[JsonProperty(PropertyName = "durationUnit")]
		public string DurationUnit { get; set; }
		///<summary>May contain extended information for property: 'DurationUnit'</summary>
		[JsonProperty(PropertyName = "_durationUnit")]
		public Element _DurationUnit { get; set; }
		///<summary>The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.</summary>
		[JsonProperty(PropertyName = "frequency")]
		public uint? Frequency { get; set; }
		///<summary>May contain extended information for property: 'Frequency'</summary>
		[JsonProperty(PropertyName = "_frequency")]
		public Element _Frequency { get; set; }
		///<summary>If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.</summary>
		[JsonProperty(PropertyName = "frequencyMax")]
		public uint? FrequencyMax { get; set; }
		///<summary>May contain extended information for property: 'FrequencyMax'</summary>
		[JsonProperty(PropertyName = "_frequencyMax")]
		public Element _FrequencyMax { get; set; }
		///<summary>The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.</summary>
		[JsonProperty(PropertyName = "offset")]
		public uint? Offset { get; set; }
		///<summary>May contain extended information for property: 'Offset'</summary>
		[JsonProperty(PropertyName = "_offset")]
		public Element _Offset { get; set; }
		///<summary>Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.</summary>
		[JsonProperty(PropertyName = "period")]
		public decimal? Period { get; set; }
		///<summary>May contain extended information for property: 'Period'</summary>
		[JsonProperty(PropertyName = "_period")]
		public Element _Period { get; set; }
		///<summary>If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.</summary>
		[JsonProperty(PropertyName = "periodMax")]
		public decimal? PeriodMax { get; set; }
		///<summary>May contain extended information for property: 'PeriodMax'</summary>
		[JsonProperty(PropertyName = "_periodMax")]
		public Element _PeriodMax { get; set; }
		///<summary>The units of time for the period in UCUM units.</summary>
		[JsonProperty(PropertyName = "periodUnit")]
		public string PeriodUnit { get; set; }
		///<summary>May contain extended information for property: 'PeriodUnit'</summary>
		[JsonProperty(PropertyName = "_periodUnit")]
		public Element _PeriodUnit { get; set; }
		///<summary>Specified time of day for action to take place.</summary>
		[JsonProperty(PropertyName = "timeOfDay")]
		public string[] TimeOfDay { get; set; }
		///<summary>May contain extended information for property: 'TimeOfDay'</summary>
		[JsonProperty(PropertyName = "_timeOfDay")]
		public Element[] _TimeOfDay { get; set; }
		///<summary>When more than one event is listed, the event is tied to the union of the specified events.</summary>
		[JsonProperty(PropertyName = "when")]
		public string[] When { get; set; }
		///<summary>May contain extended information for property: 'When'</summary>
		[JsonProperty(PropertyName = "_when")]
		public Element[] _When { get; set; }
	}
	///<summary>
	///Base StructureDefinition for TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.
	///</summary>
	///<source-file>c:\git\fhir\publish\triggerdefinition.profile.canonical.json</source-file>
	public class TriggerDefinition : Element
	{
		///<summary>A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.</summary>
		[JsonProperty(PropertyName = "condition")]
		public Expression Condition { get; set; }
		///<summary>May contain extended information for property: 'Condition'</summary>
		[JsonProperty(PropertyName = "_condition")]
		public Element _Condition { get; set; }
		///<summary>The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.</summary>
		[JsonProperty(PropertyName = "data")]
		public DataRequirement[] Data { get; set; }
		///<summary>May contain extended information for property: 'Data'</summary>
		[JsonProperty(PropertyName = "_data")]
		public Element[] _Data { get; set; }
		///<summary>A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.</summary>
		[JsonProperty(PropertyName = "name")]
		public string Name { get; set; }
		///<summary>May contain extended information for property: 'Name'</summary>
		[JsonProperty(PropertyName = "_name")]
		public Element _Name { get; set; }
		///<summary>The timing of the event (if this is a periodic trigger).</summary>
		[JsonProperty(PropertyName = "timingDate")]
		public string TimingDate { get; set; }
		///<summary>May contain extended information for property: 'TimingDate'</summary>
		[JsonProperty(PropertyName = "_timingDate")]
		public Element _TimingDate { get; set; }
		///<summary>The timing of the event (if this is a periodic trigger).</summary>
		[JsonProperty(PropertyName = "timingDateTime")]
		public string TimingDateTime { get; set; }
		///<summary>May contain extended information for property: 'TimingDateTime'</summary>
		[JsonProperty(PropertyName = "_timingDateTime")]
		public Element _TimingDateTime { get; set; }
		///<summary>The timing of the event (if this is a periodic trigger).</summary>
		[JsonProperty(PropertyName = "timingReference")]
		public Reference TimingReference { get; set; }
		///<summary>May contain extended information for property: 'TimingReference'</summary>
		[JsonProperty(PropertyName = "_timingReference")]
		public Element _TimingReference { get; set; }
		///<summary>The timing of the event (if this is a periodic trigger).</summary>
		[JsonProperty(PropertyName = "timingTiming")]
		public Timing TimingTiming { get; set; }
		///<summary>May contain extended information for property: 'TimingTiming'</summary>
		[JsonProperty(PropertyName = "_timingTiming")]
		public Element _TimingTiming { get; set; }
		///<summary>The type of triggering event.</summary>
		[JsonProperty(PropertyName = "type")]
		public string Type { get; set; }
		///<summary>May contain extended information for property: 'Type'</summary>
		[JsonProperty(PropertyName = "_type")]
		public Element _Type { get; set; }
	}
	///<summary>
	///Base StructureDefinition for unsignedInt type: An integer with a value that is not negative (e.g. >= 0)
	///</summary>
	///<source-file>c:\git\fhir\publish\unsignedint.profile.canonical.json</source-file>
	public class UnsignedInt : Decimal
    {
	}
	///<summary>
	///Base StructureDefinition for UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).
	///</summary>
	///<source-file>c:\git\fhir\publish\usagecontext.profile.canonical.json</source-file>
	public class UsageContext : Element
	{
		///<summary>A code that identifies the type of context being specified by this usage context.</summary>
		[JsonProperty(PropertyName = "code")]
		public Coding Code { get; set; }
		///<summary>May contain extended information for property: 'Code'</summary>
		[JsonProperty(PropertyName = "_code")]
		public Element _Code { get; set; }
		///<summary>A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.</summary>
		[JsonProperty(PropertyName = "valueCodeableConcept")]
		public CodeableConcept ValueCodeableConcept { get; set; }
		///<summary>May contain extended information for property: 'ValueCodeableConcept'</summary>
		[JsonProperty(PropertyName = "_valueCodeableConcept")]
		public Element _ValueCodeableConcept { get; set; }
		///<summary>A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.</summary>
		[JsonProperty(PropertyName = "valueQuantity")]
		public Quantity ValueQuantity { get; set; }
		///<summary>May contain extended information for property: 'ValueQuantity'</summary>
		[JsonProperty(PropertyName = "_valueQuantity")]
		public Element _ValueQuantity { get; set; }
		///<summary>A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.</summary>
		[JsonProperty(PropertyName = "valueRange")]
		public Range ValueRange { get; set; }
		///<summary>May contain extended information for property: 'ValueRange'</summary>
		[JsonProperty(PropertyName = "_valueRange")]
		public Element _ValueRange { get; set; }
		///<summary>A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.</summary>
		[JsonProperty(PropertyName = "valueReference")]
		public Reference ValueReference { get; set; }
		///<summary>May contain extended information for property: 'ValueReference'</summary>
		[JsonProperty(PropertyName = "_valueReference")]
		public Element _ValueReference { get; set; }
	}
	public class ResourceConverter : JsonConverter
	{
		public override bool CanConvert(Type objectType)
		{
			return typeof(Resource).IsAssignableFrom(objectType);
		}
		public override bool CanWrite
		{
			get { return false; }
		}
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
			throw new NotImplementedException();
		}
		public override bool CanRead
		{
			get { return true; }
		}
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			JObject jObject = JObject.Load(reader);
			string resourceType = jObject["resourceType"].Value<string>();
			object target = null;
			switch (resourceType)
			{
				case "Device":
					target = new Device();
					break;
				case "Group":
					target = new Group();
					break;
				case "Location":
					target = new Location();
					break;
				default:
					target = new Resource();
					break;
			}
			serializer.Populate(jObject.CreateReader(), target);
			return target;
		}
	}
} // close namespace: fhir
/** END OF GENERATED FILE **/
